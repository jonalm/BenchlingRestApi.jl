# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct TeamsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `TeamsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ TeamsApi }) = "/api/v2"

const _returntypes_get_team_TeamsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Team,
    Regex("^" * replace("404", "x"=>".") * "\$") => NotFoundError,
)

function _oacinternal_get_team(_api::TeamsApi, team_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_team_TeamsApi, "/teams/{team_id}", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "team_id", team_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get a team by ID

Returns a team by ID if the caller has permission to view. The following roles have view permission:   - tenant admins   - members of the team's organization 

Params:
- team_id::String (required)

Return: Team, OpenAPI.Clients.ApiResponse
"""
function get_team(_api::TeamsApi, team_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_team(_api, team_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_team(_api::TeamsApi, response_stream::Channel, team_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_team(_api, team_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_teams_TeamsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => TeamsPaginatedList,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_list_teams(_api::TeamsApi; ids=nothing, name=nothing, name_includes=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, modified_at=nothing, mentioned_in=nothing, organization_id=nothing, has_members=nothing, has_admins=nothing, page_size=nothing, next_token=nothing, sort=nothing, _mediaType=nothing)
    OpenAPI.validate_param("page_size", "list_teams", :maximum, page_size, 100, false)
    OpenAPI.validate_param("page_size", "list_teams", :minimum, page_size, 0, false)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_teams_TeamsApi, "/teams", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "ids", ids)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "nameIncludes", name_includes)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "names.anyOf", names_any_of)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "names.anyOf.caseSensitive", names_any_of_case_sensitive)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modifiedAt", modified_at)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "mentionedIn", mentioned_in)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "organizationId", organization_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "hasMembers", has_members)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "hasAdmins", has_admins)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pageSize", page_size)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "nextToken", next_token)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort", sort)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List teams

Returns all teams that the caller has permission to view. The following roles have view permission:   - tenant admins   - members of the team's organization 

Params:
- ids::String
- name::String
- name_includes::String
- names_any_of::String
- names_any_of_case_sensitive::String
- modified_at::String
- mentioned_in::String
- organization_id::String
- has_members::String
- has_admins::String
- page_size::Int64
- next_token::String
- sort::String

Return: TeamsPaginatedList, OpenAPI.Clients.ApiResponse
"""
function list_teams(_api::TeamsApi; ids=nothing, name=nothing, name_includes=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, modified_at=nothing, mentioned_in=nothing, organization_id=nothing, has_members=nothing, has_admins=nothing, page_size=nothing, next_token=nothing, sort=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_teams(_api; ids=ids, name=name, name_includes=name_includes, names_any_of=names_any_of, names_any_of_case_sensitive=names_any_of_case_sensitive, modified_at=modified_at, mentioned_in=mentioned_in, organization_id=organization_id, has_members=has_members, has_admins=has_admins, page_size=page_size, next_token=next_token, sort=sort, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_teams(_api::TeamsApi, response_stream::Channel; ids=nothing, name=nothing, name_includes=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, modified_at=nothing, mentioned_in=nothing, organization_id=nothing, has_members=nothing, has_admins=nothing, page_size=nothing, next_token=nothing, sort=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_teams(_api; ids=ids, name=name, name_includes=name_includes, names_any_of=names_any_of, names_any_of_case_sensitive=names_any_of_case_sensitive, modified_at=modified_at, mentioned_in=mentioned_in, organization_id=organization_id, has_members=has_members, has_admins=has_admins, page_size=page_size, next_token=next_token, sort=sort, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_team
export list_teams
