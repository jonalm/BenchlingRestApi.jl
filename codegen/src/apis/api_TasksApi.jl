# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct TasksApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `TasksApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ TasksApi }) = "/api/v2"

const _returntypes_get_task_TasksApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => GetTask200Response,
    Regex("^" * replace("404", "x"=>".") * "\$") => NotFoundError,
)

function _oacinternal_get_task(_api::TasksApi, task_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_task_TasksApi, "/tasks/{task_id}", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "task_id", task_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get a task by id

Get a task by id

Params:
- task_id::String (required)

Return: GetTask200Response, OpenAPI.Clients.ApiResponse
"""
function get_task(_api::TasksApi, task_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_task(_api, task_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_task(_api::TasksApi, response_stream::Channel, task_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_task(_api, task_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_task
