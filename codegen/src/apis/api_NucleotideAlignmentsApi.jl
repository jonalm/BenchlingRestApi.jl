# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct NucleotideAlignmentsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `NucleotideAlignmentsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ NucleotideAlignmentsApi }) = "/api/v2"

const _returntypes_create_consensus_nucleotide_alignment_NucleotideAlignmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => AsyncTaskLink,
)

function _oacinternal_create_consensus_nucleotide_alignment(_api::NucleotideAlignmentsApi; nucleotide_consensus_alignment_create=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_consensus_nucleotide_alignment_NucleotideAlignmentsApi, "/nucleotide-alignments:create-consensus-alignment", ["basicApiKeyAuth", "oAuth", ], nucleotide_consensus_alignment_create)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create a consensus Nucleotide Alignment

Create a consensus Nucleotide Alignment

Params:
- nucleotide_consensus_alignment_create::NucleotideConsensusAlignmentCreate

Return: AsyncTaskLink, OpenAPI.Clients.ApiResponse
"""
function create_consensus_nucleotide_alignment(_api::NucleotideAlignmentsApi; nucleotide_consensus_alignment_create=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_consensus_nucleotide_alignment(_api; nucleotide_consensus_alignment_create=nucleotide_consensus_alignment_create, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_consensus_nucleotide_alignment(_api::NucleotideAlignmentsApi, response_stream::Channel; nucleotide_consensus_alignment_create=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_consensus_nucleotide_alignment(_api; nucleotide_consensus_alignment_create=nucleotide_consensus_alignment_create, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_template_nucleotide_alignment_NucleotideAlignmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => AsyncTaskLink,
)

function _oacinternal_create_template_nucleotide_alignment(_api::NucleotideAlignmentsApi; nucleotide_template_alignment_create=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_template_nucleotide_alignment_NucleotideAlignmentsApi, "/nucleotide-alignments:create-template-alignment", ["basicApiKeyAuth", "oAuth", ], nucleotide_template_alignment_create)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create a template Nucleotide Alignment

Create a template Nucleotide Alignment

Params:
- nucleotide_template_alignment_create::NucleotideTemplateAlignmentCreate

Return: AsyncTaskLink, OpenAPI.Clients.ApiResponse
"""
function create_template_nucleotide_alignment(_api::NucleotideAlignmentsApi; nucleotide_template_alignment_create=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_template_nucleotide_alignment(_api; nucleotide_template_alignment_create=nucleotide_template_alignment_create, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_template_nucleotide_alignment(_api::NucleotideAlignmentsApi, response_stream::Channel; nucleotide_template_alignment_create=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_template_nucleotide_alignment(_api; nucleotide_template_alignment_create=nucleotide_template_alignment_create, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_nucleotide_alignment_NucleotideAlignmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Any,
    Regex("^" * replace("404", "x"=>".") * "\$") => NotFoundError,
)

function _oacinternal_delete_nucleotide_alignment(_api::NucleotideAlignmentsApi, alignment_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_nucleotide_alignment_NucleotideAlignmentsApi, "/nucleotide-alignments/{alignment_id}", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "alignment_id", alignment_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete a Nucleotide Alignment

Delete a Nucleotide Alignment

Params:
- alignment_id::String (required)

Return: Any, OpenAPI.Clients.ApiResponse
"""
function delete_nucleotide_alignment(_api::NucleotideAlignmentsApi, alignment_id::String; _mediaType=nothing)
    _ctx = _oacinternal_delete_nucleotide_alignment(_api, alignment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_nucleotide_alignment(_api::NucleotideAlignmentsApi, response_stream::Channel, alignment_id::String; _mediaType=nothing)
    _ctx = _oacinternal_delete_nucleotide_alignment(_api, alignment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_nucleotide_alignment_NucleotideAlignmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NucleotideAlignment,
    Regex("^" * replace("404", "x"=>".") * "\$") => NotFoundError,
)

function _oacinternal_get_nucleotide_alignment(_api::NucleotideAlignmentsApi, alignment_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_nucleotide_alignment_NucleotideAlignmentsApi, "/nucleotide-alignments/{alignment_id}", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "alignment_id", alignment_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get a Nucleotide Alignment

Get a Nucleotide Alignment

Params:
- alignment_id::String (required)

Return: NucleotideAlignment, OpenAPI.Clients.ApiResponse
"""
function get_nucleotide_alignment(_api::NucleotideAlignmentsApi, alignment_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_nucleotide_alignment(_api, alignment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_nucleotide_alignment(_api::NucleotideAlignmentsApi, response_stream::Channel, alignment_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_nucleotide_alignment(_api, alignment_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_nucleotide_alignments_NucleotideAlignmentsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => NucleotideAlignmentsPaginatedList,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_list_nucleotide_alignments(_api::NucleotideAlignmentsApi; page_size=nothing, next_token=nothing, sort=nothing, modified_at=nothing, name=nothing, name_includes=nothing, ids=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, sequence_ids=nothing, _mediaType=nothing)
    OpenAPI.validate_param("page_size", "list_nucleotide_alignments", :maximum, page_size, 100, false)
    OpenAPI.validate_param("page_size", "list_nucleotide_alignments", :minimum, page_size, 0, false)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_nucleotide_alignments_NucleotideAlignmentsApi, "/nucleotide-alignments", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "pageSize", page_size)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "nextToken", next_token)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort", sort)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modifiedAt", modified_at)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "nameIncludes", name_includes)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "ids", ids)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "names.anyOf", names_any_of)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "names.anyOf.caseSensitive", names_any_of_case_sensitive)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sequenceIds", sequence_ids)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List Nucleotide Alignments

List Nucleotide Alignments

Params:
- page_size::Int64
- next_token::String
- sort::String
- modified_at::String
- name::String
- name_includes::String
- ids::String
- names_any_of::String
- names_any_of_case_sensitive::String
- sequence_ids::String

Return: NucleotideAlignmentsPaginatedList, OpenAPI.Clients.ApiResponse
"""
function list_nucleotide_alignments(_api::NucleotideAlignmentsApi; page_size=nothing, next_token=nothing, sort=nothing, modified_at=nothing, name=nothing, name_includes=nothing, ids=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, sequence_ids=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_nucleotide_alignments(_api; page_size=page_size, next_token=next_token, sort=sort, modified_at=modified_at, name=name, name_includes=name_includes, ids=ids, names_any_of=names_any_of, names_any_of_case_sensitive=names_any_of_case_sensitive, sequence_ids=sequence_ids, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_nucleotide_alignments(_api::NucleotideAlignmentsApi, response_stream::Channel; page_size=nothing, next_token=nothing, sort=nothing, modified_at=nothing, name=nothing, name_includes=nothing, ids=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, sequence_ids=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_nucleotide_alignments(_api; page_size=page_size, next_token=next_token, sort=sort, modified_at=modified_at, name=name, name_includes=name_includes, ids=ids, names_any_of=names_any_of, names_any_of_case_sensitive=names_any_of_case_sensitive, sequence_ids=sequence_ids, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_consensus_nucleotide_alignment
export create_template_nucleotide_alignment
export delete_nucleotide_alignment
export get_nucleotide_alignment
export list_nucleotide_alignments
