# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct AuthenticationApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `AuthenticationApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ AuthenticationApi }) = "/api/v2"

const _returntypes_generate_token_AuthenticationApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => TokenResponse,
    Regex("^" * replace("400", "x"=>".") * "\$") => OAuthBadRequestError,
    Regex("^" * replace("401", "x"=>".") * "\$") => OAuthUnauthorizedError,
)

function _oacinternal_generate_token(_api::AuthenticationApi, grant_type::String; client_id=nothing, client_secret=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_generate_token_AuthenticationApi, "/token", ["basicClientIdSecretAuth", ])
    OpenAPI.Clients.set_param(_ctx.form, "client_id", client_id)  # type String
    OpenAPI.Clients.set_param(_ctx.form, "client_secret", client_secret)  # type String
    OpenAPI.Clients.set_param(_ctx.form, "grant_type", grant_type)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/x-www-form-urlencoded", ] : [_mediaType])
    return _ctx
end

@doc raw"""Generate a token for usage with authenticating via OAuth2 in subsequent API calls.

Generate a token

Params:
- grant_type::String (required)
- client_id::String
- client_secret::String

Return: TokenResponse, OpenAPI.Clients.ApiResponse
"""
function generate_token(_api::AuthenticationApi, grant_type::String; client_id=nothing, client_secret=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_token(_api, grant_type; client_id=client_id, client_secret=client_secret, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function generate_token(_api::AuthenticationApi, response_stream::Channel, grant_type::String; client_id=nothing, client_secret=nothing, _mediaType=nothing)
    _ctx = _oacinternal_generate_token(_api, grant_type; client_id=client_id, client_secret=client_secret, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export generate_token
