# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct OrganizationsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `OrganizationsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ OrganizationsApi }) = "/api/v2"

const _returntypes_get_organization_OrganizationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Organization,
    Regex("^" * replace("404", "x"=>".") * "\$") => NotFoundError,
)

function _oacinternal_get_organization(_api::OrganizationsApi, organization_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_organization_OrganizationsApi, "/organizations/{organization_id}", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "organization_id", organization_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get an organization by ID

Returns an organization by ID if the caller has permission to view. The following roles have view permission:   - tenant admins   - members of the organization 

Params:
- organization_id::String (required)

Return: Organization, OpenAPI.Clients.ApiResponse
"""
function get_organization(_api::OrganizationsApi, organization_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_organization(_api, organization_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_organization(_api::OrganizationsApi, response_stream::Channel, organization_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_organization(_api, organization_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_organizations_OrganizationsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrganizationsPaginatedList,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_list_organizations(_api::OrganizationsApi; ids=nothing, name=nothing, name_includes=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, modified_at=nothing, has_members=nothing, has_admins=nothing, page_size=nothing, next_token=nothing, sort=nothing, _mediaType=nothing)
    OpenAPI.validate_param("page_size", "list_organizations", :maximum, page_size, 100, false)
    OpenAPI.validate_param("page_size", "list_organizations", :minimum, page_size, 0, false)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_organizations_OrganizationsApi, "/organizations", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "ids", ids)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "nameIncludes", name_includes)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "names.anyOf", names_any_of)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "names.anyOf.caseSensitive", names_any_of_case_sensitive)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modifiedAt", modified_at)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "hasMembers", has_members)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "hasAdmins", has_admins)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pageSize", page_size)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "nextToken", next_token)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort", sort)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List organizations

Returns all organizations that the caller has permission to view. The following roles have view permission:   - tenant admins   - members of the organization 

Params:
- ids::String
- name::String
- name_includes::String
- names_any_of::String
- names_any_of_case_sensitive::String
- modified_at::String
- has_members::String
- has_admins::String
- page_size::Int64
- next_token::String
- sort::String

Return: OrganizationsPaginatedList, OpenAPI.Clients.ApiResponse
"""
function list_organizations(_api::OrganizationsApi; ids=nothing, name=nothing, name_includes=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, modified_at=nothing, has_members=nothing, has_admins=nothing, page_size=nothing, next_token=nothing, sort=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_organizations(_api; ids=ids, name=name, name_includes=name_includes, names_any_of=names_any_of, names_any_of_case_sensitive=names_any_of_case_sensitive, modified_at=modified_at, has_members=has_members, has_admins=has_admins, page_size=page_size, next_token=next_token, sort=sort, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_organizations(_api::OrganizationsApi, response_stream::Channel; ids=nothing, name=nothing, name_includes=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, modified_at=nothing, has_members=nothing, has_admins=nothing, page_size=nothing, next_token=nothing, sort=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_organizations(_api; ids=ids, name=name, name_includes=name_includes, names_any_of=names_any_of, names_any_of_case_sensitive=names_any_of_case_sensitive, modified_at=modified_at, has_members=has_members, has_admins=has_admins, page_size=page_size, next_token=next_token, sort=sort, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_organization
export list_organizations
