# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct DNAOligosApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `DNAOligosApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ DNAOligosApi }) = "/api/v2"

const _returntypes_archive_d_n_a_oligos_DNAOligosApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DnaOligosArchivalChange,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_archive_d_n_a_oligos(_api::DNAOligosApi; dna_oligos_archive=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_archive_d_n_a_oligos_DNAOligosApi, "/dna-oligos:archive", ["basicApiKeyAuth", "oAuth", ], dna_oligos_archive)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Archive DNA Oligos

Archive DNA Oligos

Params:
- dna_oligos_archive::DnaOligosArchive

Return: DnaOligosArchivalChange, OpenAPI.Clients.ApiResponse
"""
function archive_d_n_a_oligos(_api::DNAOligosApi; dna_oligos_archive=nothing, _mediaType=nothing)
    _ctx = _oacinternal_archive_d_n_a_oligos(_api; dna_oligos_archive=dna_oligos_archive, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function archive_d_n_a_oligos(_api::DNAOligosApi, response_stream::Channel; dna_oligos_archive=nothing, _mediaType=nothing)
    _ctx = _oacinternal_archive_d_n_a_oligos(_api; dna_oligos_archive=dna_oligos_archive, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_bulk_create_d_n_a_oligos_DNAOligosApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => AsyncTaskLink,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_bulk_create_d_n_a_oligos(_api::DNAOligosApi; dna_oligos_bulk_create_request=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_bulk_create_d_n_a_oligos_DNAOligosApi, "/dna-oligos:bulk-create", ["basicApiKeyAuth", "oAuth", ], dna_oligos_bulk_create_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Bulk Create DNA Oligos

Bulk Create DNA Oligos. Limit of 1000 DNA Oligos per request.

Params:
- dna_oligos_bulk_create_request::DnaOligosBulkCreateRequest

Return: AsyncTaskLink, OpenAPI.Clients.ApiResponse
"""
function bulk_create_d_n_a_oligos(_api::DNAOligosApi; dna_oligos_bulk_create_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bulk_create_d_n_a_oligos(_api; dna_oligos_bulk_create_request=dna_oligos_bulk_create_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function bulk_create_d_n_a_oligos(_api::DNAOligosApi, response_stream::Channel; dna_oligos_bulk_create_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bulk_create_d_n_a_oligos(_api; dna_oligos_bulk_create_request=dna_oligos_bulk_create_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_bulk_update_d_n_a_oligos_DNAOligosApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => AsyncTaskLink,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_bulk_update_d_n_a_oligos(_api::DNAOligosApi; dna_oligos_bulk_update_request=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_bulk_update_d_n_a_oligos_DNAOligosApi, "/dna-oligos:bulk-update", ["basicApiKeyAuth", "oAuth", ], dna_oligos_bulk_update_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Bulk Update DNA Oligos

Bulk Update DNA Oligos

Params:
- dna_oligos_bulk_update_request::DnaOligosBulkUpdateRequest

Return: AsyncTaskLink, OpenAPI.Clients.ApiResponse
"""
function bulk_update_d_n_a_oligos(_api::DNAOligosApi; dna_oligos_bulk_update_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bulk_update_d_n_a_oligos(_api; dna_oligos_bulk_update_request=dna_oligos_bulk_update_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function bulk_update_d_n_a_oligos(_api::DNAOligosApi, response_stream::Channel; dna_oligos_bulk_update_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bulk_update_d_n_a_oligos(_api; dna_oligos_bulk_update_request=dna_oligos_bulk_update_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_d_n_a_oligo_DNAOligosApi = Dict{Regex,Type}(
    Regex("^" * replace("201", "x"=>".") * "\$") => DnaOligo,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
    Regex("^" * replace("503", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_d_n_a_oligo(_api::DNAOligosApi; dna_oligo_create=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_d_n_a_oligo_DNAOligosApi, "/dna-oligos", ["basicApiKeyAuth", "oAuth", ], dna_oligo_create)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create a DNA Oligo

Create a DNA Oligo

Params:
- dna_oligo_create::DnaOligoCreate

Return: DnaOligo, OpenAPI.Clients.ApiResponse
"""
function create_d_n_a_oligo(_api::DNAOligosApi; dna_oligo_create=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_d_n_a_oligo(_api; dna_oligo_create=dna_oligo_create, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_d_n_a_oligo(_api::DNAOligosApi, response_stream::Channel; dna_oligo_create=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_d_n_a_oligo(_api; dna_oligo_create=dna_oligo_create, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_d_n_a_oligo_DNAOligosApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DnaOligo,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_get_d_n_a_oligo(_api::DNAOligosApi, oligo_id::String; custom_notation_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_d_n_a_oligo_DNAOligosApi, "/dna-oligos/{oligo_id}", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "oligo_id", oligo_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customNotationId", custom_notation_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get a DNA Oligo

Get a DNA Oligo

Params:
- oligo_id::String (required)
- custom_notation_id::String

Return: DnaOligo, OpenAPI.Clients.ApiResponse
"""
function get_d_n_a_oligo(_api::DNAOligosApi, oligo_id::String; custom_notation_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_d_n_a_oligo(_api, oligo_id; custom_notation_id=custom_notation_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_d_n_a_oligo(_api::DNAOligosApi, response_stream::Channel, oligo_id::String; custom_notation_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_d_n_a_oligo(_api, oligo_id; custom_notation_id=custom_notation_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_custom_notations_DNAOligosApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CustomNotationsPaginatedList,
)

function _oacinternal_list_custom_notations(_api::DNAOligosApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_custom_notations_DNAOligosApi, "/custom-notations", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List custom notations

List all available custom notations for specifying modified nucleotide sequences

Params:

Return: CustomNotationsPaginatedList, OpenAPI.Clients.ApiResponse
"""
function list_custom_notations(_api::DNAOligosApi; _mediaType=nothing)
    _ctx = _oacinternal_list_custom_notations(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_custom_notations(_api::DNAOligosApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_list_custom_notations(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_d_n_a_oligos_DNAOligosApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DnaOligosPaginatedList,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_list_d_n_a_oligos(_api::DNAOligosApi; page_size=nothing, next_token=nothing, sort=nothing, modified_at=nothing, name=nothing, name_includes=nothing, bases=nothing, folder_id=nothing, mentioned_in=nothing, project_id=nothing, registry_id=nothing, schema_id=nothing, schema_fields=nothing, archive_reason=nothing, mentions=nothing, ids=nothing, entity_registry_ids_any_of=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, creator_ids=nothing, author_ids_any_of=nothing, returning=nothing, custom_notation_id=nothing, _mediaType=nothing)
    OpenAPI.validate_param("page_size", "list_d_n_a_oligos", :maximum, page_size, 100, false)
    OpenAPI.validate_param("page_size", "list_d_n_a_oligos", :minimum, page_size, 0, false)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_d_n_a_oligos_DNAOligosApi, "/dna-oligos", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "pageSize", page_size)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "nextToken", next_token)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort", sort)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modifiedAt", modified_at)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "nameIncludes", name_includes)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "bases", bases)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "folderId", folder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "mentionedIn", mentioned_in)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "projectId", project_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "registryId", registry_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "schemaId", schema_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "schemaFields", schema_fields)  # type Dict{String, Any}
    OpenAPI.Clients.set_param(_ctx.query, "archiveReason", archive_reason)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "mentions", mentions)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "ids", ids)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "entityRegistryIds.anyOf", entity_registry_ids_any_of)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "names.anyOf", names_any_of)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "names.anyOf.caseSensitive", names_any_of_case_sensitive)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "creatorIds", creator_ids)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "authorIds.anyOf", author_ids_any_of)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "returning", returning)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customNotationId", custom_notation_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List DNA Oligos

List DNA Oligos

Params:
- page_size::Int64
- next_token::String
- sort::String
- modified_at::String
- name::String
- name_includes::String
- bases::String
- folder_id::String
- mentioned_in::String
- project_id::String
- registry_id::String
- schema_id::String
- schema_fields::Dict{String, Any}
- archive_reason::String
- mentions::String
- ids::String
- entity_registry_ids_any_of::String
- names_any_of::String
- names_any_of_case_sensitive::String
- creator_ids::String
- author_ids_any_of::String
- returning::String
- custom_notation_id::String

Return: DnaOligosPaginatedList, OpenAPI.Clients.ApiResponse
"""
function list_d_n_a_oligos(_api::DNAOligosApi; page_size=nothing, next_token=nothing, sort=nothing, modified_at=nothing, name=nothing, name_includes=nothing, bases=nothing, folder_id=nothing, mentioned_in=nothing, project_id=nothing, registry_id=nothing, schema_id=nothing, schema_fields=nothing, archive_reason=nothing, mentions=nothing, ids=nothing, entity_registry_ids_any_of=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, creator_ids=nothing, author_ids_any_of=nothing, returning=nothing, custom_notation_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_d_n_a_oligos(_api; page_size=page_size, next_token=next_token, sort=sort, modified_at=modified_at, name=name, name_includes=name_includes, bases=bases, folder_id=folder_id, mentioned_in=mentioned_in, project_id=project_id, registry_id=registry_id, schema_id=schema_id, schema_fields=schema_fields, archive_reason=archive_reason, mentions=mentions, ids=ids, entity_registry_ids_any_of=entity_registry_ids_any_of, names_any_of=names_any_of, names_any_of_case_sensitive=names_any_of_case_sensitive, creator_ids=creator_ids, author_ids_any_of=author_ids_any_of, returning=returning, custom_notation_id=custom_notation_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_d_n_a_oligos(_api::DNAOligosApi, response_stream::Channel; page_size=nothing, next_token=nothing, sort=nothing, modified_at=nothing, name=nothing, name_includes=nothing, bases=nothing, folder_id=nothing, mentioned_in=nothing, project_id=nothing, registry_id=nothing, schema_id=nothing, schema_fields=nothing, archive_reason=nothing, mentions=nothing, ids=nothing, entity_registry_ids_any_of=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, creator_ids=nothing, author_ids_any_of=nothing, returning=nothing, custom_notation_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_d_n_a_oligos(_api; page_size=page_size, next_token=next_token, sort=sort, modified_at=modified_at, name=name, name_includes=name_includes, bases=bases, folder_id=folder_id, mentioned_in=mentioned_in, project_id=project_id, registry_id=registry_id, schema_id=schema_id, schema_fields=schema_fields, archive_reason=archive_reason, mentions=mentions, ids=ids, entity_registry_ids_any_of=entity_registry_ids_any_of, names_any_of=names_any_of, names_any_of_case_sensitive=names_any_of_case_sensitive, creator_ids=creator_ids, author_ids_any_of=author_ids_any_of, returning=returning, custom_notation_id=custom_notation_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_unarchive_d_n_a_oligos_DNAOligosApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DnaOligosArchivalChange,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_unarchive_d_n_a_oligos(_api::DNAOligosApi; dna_oligos_unarchive=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_unarchive_d_n_a_oligos_DNAOligosApi, "/dna-oligos:unarchive", ["basicApiKeyAuth", "oAuth", ], dna_oligos_unarchive)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Unarchive DNA Oligos

Unarchive DNA Oligos

Params:
- dna_oligos_unarchive::DnaOligosUnarchive

Return: DnaOligosArchivalChange, OpenAPI.Clients.ApiResponse
"""
function unarchive_d_n_a_oligos(_api::DNAOligosApi; dna_oligos_unarchive=nothing, _mediaType=nothing)
    _ctx = _oacinternal_unarchive_d_n_a_oligos(_api; dna_oligos_unarchive=dna_oligos_unarchive, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function unarchive_d_n_a_oligos(_api::DNAOligosApi, response_stream::Channel; dna_oligos_unarchive=nothing, _mediaType=nothing)
    _ctx = _oacinternal_unarchive_d_n_a_oligos(_api; dna_oligos_unarchive=dna_oligos_unarchive, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_update_d_n_a_oligo_DNAOligosApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => DnaOligo,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_update_d_n_a_oligo(_api::DNAOligosApi, oligo_id::String; dna_oligo_update=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_update_d_n_a_oligo_DNAOligosApi, "/dna-oligos/{oligo_id}", ["basicApiKeyAuth", "oAuth", ], dna_oligo_update)
    OpenAPI.Clients.set_param(_ctx.path, "oligo_id", oligo_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update a DNA Oligo

Update a DNA Oligo

Params:
- oligo_id::String (required)
- dna_oligo_update::DnaOligoUpdate

Return: DnaOligo, OpenAPI.Clients.ApiResponse
"""
function update_d_n_a_oligo(_api::DNAOligosApi, oligo_id::String; dna_oligo_update=nothing, _mediaType=nothing)
    _ctx = _oacinternal_update_d_n_a_oligo(_api, oligo_id; dna_oligo_update=dna_oligo_update, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function update_d_n_a_oligo(_api::DNAOligosApi, response_stream::Channel, oligo_id::String; dna_oligo_update=nothing, _mediaType=nothing)
    _ctx = _oacinternal_update_d_n_a_oligo(_api, oligo_id; dna_oligo_update=dna_oligo_update, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export archive_d_n_a_oligos
export bulk_create_d_n_a_oligos
export bulk_update_d_n_a_oligos
export create_d_n_a_oligo
export get_d_n_a_oligo
export list_custom_notations
export list_d_n_a_oligos
export unarchive_d_n_a_oligos
export update_d_n_a_oligo
