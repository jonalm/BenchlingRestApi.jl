# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct CustomEntitiesApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `CustomEntitiesApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ CustomEntitiesApi }) = "/api/v2"

const _returntypes_archive_custom_entities_CustomEntitiesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CustomEntitiesArchivalChange,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_archive_custom_entities(_api::CustomEntitiesApi; custom_entities_archive=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_archive_custom_entities_CustomEntitiesApi, "/custom-entities:archive", ["basicApiKeyAuth", "oAuth", ], custom_entities_archive)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Archive custom entities

Archive custom entities

Params:
- custom_entities_archive::CustomEntitiesArchive

Return: CustomEntitiesArchivalChange, OpenAPI.Clients.ApiResponse
"""
function archive_custom_entities(_api::CustomEntitiesApi; custom_entities_archive=nothing, _mediaType=nothing)
    _ctx = _oacinternal_archive_custom_entities(_api; custom_entities_archive=custom_entities_archive, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function archive_custom_entities(_api::CustomEntitiesApi, response_stream::Channel; custom_entities_archive=nothing, _mediaType=nothing)
    _ctx = _oacinternal_archive_custom_entities(_api; custom_entities_archive=custom_entities_archive, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_bulk_create_custom_entities_CustomEntitiesApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => AsyncTaskLink,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_bulk_create_custom_entities(_api::CustomEntitiesApi; custom_entities_bulk_create_request=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_bulk_create_custom_entities_CustomEntitiesApi, "/custom-entities:bulk-create", ["basicApiKeyAuth", "oAuth", ], custom_entities_bulk_create_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Bulk Create custom entities

Bulk Create custom entities. Limit of 2500 custom entities per request.

Params:
- custom_entities_bulk_create_request::CustomEntitiesBulkCreateRequest

Return: AsyncTaskLink, OpenAPI.Clients.ApiResponse
"""
function bulk_create_custom_entities(_api::CustomEntitiesApi; custom_entities_bulk_create_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bulk_create_custom_entities(_api; custom_entities_bulk_create_request=custom_entities_bulk_create_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function bulk_create_custom_entities(_api::CustomEntitiesApi, response_stream::Channel; custom_entities_bulk_create_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bulk_create_custom_entities(_api; custom_entities_bulk_create_request=custom_entities_bulk_create_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_bulk_get_custom_entities_CustomEntitiesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CustomEntitiesList,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_bulk_get_custom_entities(_api::CustomEntitiesApi, custom_entity_ids::String; returning=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_bulk_get_custom_entities_CustomEntitiesApi, "/custom-entities:bulk-get", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "customEntityIds", custom_entity_ids)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "returning", returning)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Bulk get custom entities by ID

Bulk get custom entities by ID

Params:
- custom_entity_ids::String (required)
- returning::String

Return: CustomEntitiesList, OpenAPI.Clients.ApiResponse
"""
function bulk_get_custom_entities(_api::CustomEntitiesApi, custom_entity_ids::String; returning=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bulk_get_custom_entities(_api, custom_entity_ids; returning=returning, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function bulk_get_custom_entities(_api::CustomEntitiesApi, response_stream::Channel, custom_entity_ids::String; returning=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bulk_get_custom_entities(_api, custom_entity_ids; returning=returning, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_bulk_update_custom_entities_CustomEntitiesApi = Dict{Regex,Type}(
    Regex("^" * replace("202", "x"=>".") * "\$") => AsyncTaskLink,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_bulk_update_custom_entities(_api::CustomEntitiesApi; custom_entities_bulk_update_request=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_bulk_update_custom_entities_CustomEntitiesApi, "/custom-entities:bulk-update", ["basicApiKeyAuth", "oAuth", ], custom_entities_bulk_update_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Bulk Update custom entities

Bulk Update custom entities

Params:
- custom_entities_bulk_update_request::CustomEntitiesBulkUpdateRequest

Return: AsyncTaskLink, OpenAPI.Clients.ApiResponse
"""
function bulk_update_custom_entities(_api::CustomEntitiesApi; custom_entities_bulk_update_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bulk_update_custom_entities(_api; custom_entities_bulk_update_request=custom_entities_bulk_update_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function bulk_update_custom_entities(_api::CustomEntitiesApi, response_stream::Channel; custom_entities_bulk_update_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bulk_update_custom_entities(_api; custom_entities_bulk_update_request=custom_entities_bulk_update_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_custom_entity_CustomEntitiesApi = Dict{Regex,Type}(
    Regex("^" * replace("201", "x"=>".") * "\$") => CustomEntity,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
    Regex("^" * replace("503", "x"=>".") * "\$") => Nothing,
)

function _oacinternal_create_custom_entity(_api::CustomEntitiesApi; custom_entity_create=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_custom_entity_CustomEntitiesApi, "/custom-entities", ["basicApiKeyAuth", "oAuth", ], custom_entity_create)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create a custom entity

Create a custom entity

Params:
- custom_entity_create::CustomEntityCreate

Return: CustomEntity, OpenAPI.Clients.ApiResponse
"""
function create_custom_entity(_api::CustomEntitiesApi; custom_entity_create=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_custom_entity(_api; custom_entity_create=custom_entity_create, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_custom_entity(_api::CustomEntitiesApi, response_stream::Channel; custom_entity_create=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_custom_entity(_api; custom_entity_create=custom_entity_create, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_custom_entity_CustomEntitiesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CustomEntity,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_get_custom_entity(_api::CustomEntitiesApi, custom_entity_id::String; returning=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_custom_entity_CustomEntitiesApi, "/custom-entities/{custom_entity_id}", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "custom_entity_id", custom_entity_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "returning", returning)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get a custom entity

Get a custom entity

Params:
- custom_entity_id::String (required)
- returning::String

Return: CustomEntity, OpenAPI.Clients.ApiResponse
"""
function get_custom_entity(_api::CustomEntitiesApi, custom_entity_id::String; returning=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_custom_entity(_api, custom_entity_id; returning=returning, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_custom_entity(_api::CustomEntitiesApi, response_stream::Channel, custom_entity_id::String; returning=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_custom_entity(_api, custom_entity_id; returning=returning, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_list_custom_entities_CustomEntitiesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CustomEntitiesPaginatedList,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_list_custom_entities(_api::CustomEntitiesApi; next_token=nothing, page_size=nothing, sort=nothing, modified_at=nothing, name=nothing, returning=nothing, name_includes=nothing, folder_id=nothing, mentioned_in=nothing, project_id=nothing, registry_id=nothing, schema_id=nothing, schema_fields=nothing, archive_reason=nothing, mentions=nothing, ids=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, entity_registry_ids_any_of=nothing, creator_ids=nothing, author_ids_any_of=nothing, _mediaType=nothing)
    OpenAPI.validate_param("page_size", "list_custom_entities", :maximum, page_size, 100, false)
    OpenAPI.validate_param("page_size", "list_custom_entities", :minimum, page_size, 0, false)

    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_list_custom_entities_CustomEntitiesApi, "/custom-entities", ["basicApiKeyAuth", "oAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "nextToken", next_token)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "pageSize", page_size)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "sort", sort)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modifiedAt", modified_at)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "name", name)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "returning", returning)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "nameIncludes", name_includes)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "folderId", folder_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "mentionedIn", mentioned_in)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "projectId", project_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "registryId", registry_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "schemaId", schema_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "schemaFields", schema_fields)  # type Dict{String, Any}
    OpenAPI.Clients.set_param(_ctx.query, "archiveReason", archive_reason)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "mentions", mentions)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "ids", ids)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "names.anyOf", names_any_of)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "names.anyOf.caseSensitive", names_any_of_case_sensitive)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "entityRegistryIds.anyOf", entity_registry_ids_any_of)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "creatorIds", creator_ids)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "authorIds.anyOf", author_ids_any_of)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List custom entities

List custom entities

Params:
- next_token::String
- page_size::Int64
- sort::String
- modified_at::String
- name::String
- returning::String
- name_includes::String
- folder_id::String
- mentioned_in::String
- project_id::String
- registry_id::String
- schema_id::String
- schema_fields::Dict{String, Any}
- archive_reason::String
- mentions::String
- ids::String
- names_any_of::String
- names_any_of_case_sensitive::String
- entity_registry_ids_any_of::String
- creator_ids::String
- author_ids_any_of::String

Return: CustomEntitiesPaginatedList, OpenAPI.Clients.ApiResponse
"""
function list_custom_entities(_api::CustomEntitiesApi; next_token=nothing, page_size=nothing, sort=nothing, modified_at=nothing, name=nothing, returning=nothing, name_includes=nothing, folder_id=nothing, mentioned_in=nothing, project_id=nothing, registry_id=nothing, schema_id=nothing, schema_fields=nothing, archive_reason=nothing, mentions=nothing, ids=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, entity_registry_ids_any_of=nothing, creator_ids=nothing, author_ids_any_of=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_custom_entities(_api; next_token=next_token, page_size=page_size, sort=sort, modified_at=modified_at, name=name, returning=returning, name_includes=name_includes, folder_id=folder_id, mentioned_in=mentioned_in, project_id=project_id, registry_id=registry_id, schema_id=schema_id, schema_fields=schema_fields, archive_reason=archive_reason, mentions=mentions, ids=ids, names_any_of=names_any_of, names_any_of_case_sensitive=names_any_of_case_sensitive, entity_registry_ids_any_of=entity_registry_ids_any_of, creator_ids=creator_ids, author_ids_any_of=author_ids_any_of, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function list_custom_entities(_api::CustomEntitiesApi, response_stream::Channel; next_token=nothing, page_size=nothing, sort=nothing, modified_at=nothing, name=nothing, returning=nothing, name_includes=nothing, folder_id=nothing, mentioned_in=nothing, project_id=nothing, registry_id=nothing, schema_id=nothing, schema_fields=nothing, archive_reason=nothing, mentions=nothing, ids=nothing, names_any_of=nothing, names_any_of_case_sensitive=nothing, entity_registry_ids_any_of=nothing, creator_ids=nothing, author_ids_any_of=nothing, _mediaType=nothing)
    _ctx = _oacinternal_list_custom_entities(_api; next_token=next_token, page_size=page_size, sort=sort, modified_at=modified_at, name=name, returning=returning, name_includes=name_includes, folder_id=folder_id, mentioned_in=mentioned_in, project_id=project_id, registry_id=registry_id, schema_id=schema_id, schema_fields=schema_fields, archive_reason=archive_reason, mentions=mentions, ids=ids, names_any_of=names_any_of, names_any_of_case_sensitive=names_any_of_case_sensitive, entity_registry_ids_any_of=entity_registry_ids_any_of, creator_ids=creator_ids, author_ids_any_of=author_ids_any_of, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_unarchive_custom_entities_CustomEntitiesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CustomEntitiesArchivalChange,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_unarchive_custom_entities(_api::CustomEntitiesApi; custom_entities_unarchive=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_unarchive_custom_entities_CustomEntitiesApi, "/custom-entities:unarchive", ["basicApiKeyAuth", "oAuth", ], custom_entities_unarchive)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Unarchive custom entities

Unarchive custom entities

Params:
- custom_entities_unarchive::CustomEntitiesUnarchive

Return: CustomEntitiesArchivalChange, OpenAPI.Clients.ApiResponse
"""
function unarchive_custom_entities(_api::CustomEntitiesApi; custom_entities_unarchive=nothing, _mediaType=nothing)
    _ctx = _oacinternal_unarchive_custom_entities(_api; custom_entities_unarchive=custom_entities_unarchive, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function unarchive_custom_entities(_api::CustomEntitiesApi, response_stream::Channel; custom_entities_unarchive=nothing, _mediaType=nothing)
    _ctx = _oacinternal_unarchive_custom_entities(_api; custom_entities_unarchive=custom_entities_unarchive, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_update_custom_entity_CustomEntitiesApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CustomEntity,
    Regex("^" * replace("400", "x"=>".") * "\$") => BadRequestError,
)

function _oacinternal_update_custom_entity(_api::CustomEntitiesApi, custom_entity_id::String; custom_entity_update=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PATCH", _returntypes_update_custom_entity_CustomEntitiesApi, "/custom-entities/{custom_entity_id}", ["basicApiKeyAuth", "oAuth", ], custom_entity_update)
    OpenAPI.Clients.set_param(_ctx.path, "custom_entity_id", custom_entity_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update a custom entity

Update a custom entity

Params:
- custom_entity_id::String (required)
- custom_entity_update::CustomEntityUpdate

Return: CustomEntity, OpenAPI.Clients.ApiResponse
"""
function update_custom_entity(_api::CustomEntitiesApi, custom_entity_id::String; custom_entity_update=nothing, _mediaType=nothing)
    _ctx = _oacinternal_update_custom_entity(_api, custom_entity_id; custom_entity_update=custom_entity_update, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function update_custom_entity(_api::CustomEntitiesApi, response_stream::Channel, custom_entity_id::String; custom_entity_update=nothing, _mediaType=nothing)
    _ctx = _oacinternal_update_custom_entity(_api, custom_entity_id; custom_entity_update=custom_entity_update, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export archive_custom_entities
export bulk_create_custom_entities
export bulk_get_custom_entities
export bulk_update_custom_entities
export create_custom_entity
export get_custom_entity
export list_custom_entities
export unarchive_custom_entities
export update_custom_entity
