# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DnaOligosArchivalChange
IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of DNA Oligos along with any IDs of batches that were archived / unarchived. 

    DnaOligosArchivalChange(;
        batchIds=nothing,
        dnaOligoIds=nothing,
    )

    - batchIds::Vector{String}
    - dnaOligoIds::Vector{String}
"""
Base.@kwdef mutable struct DnaOligosArchivalChange <: OpenAPI.APIModel
    batchIds::Union{Nothing, Vector{String}} = nothing
    dnaOligoIds::Union{Nothing, Vector{String}} = nothing

    function DnaOligosArchivalChange(batchIds, dnaOligoIds, )
        OpenAPI.validate_property(DnaOligosArchivalChange, Symbol("batchIds"), batchIds)
        OpenAPI.validate_property(DnaOligosArchivalChange, Symbol("dnaOligoIds"), dnaOligoIds)
        return new(batchIds, dnaOligoIds, )
    end
end # type DnaOligosArchivalChange

const _property_types_DnaOligosArchivalChange = Dict{Symbol,String}(Symbol("batchIds")=>"Vector{String}", Symbol("dnaOligoIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ DnaOligosArchivalChange }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DnaOligosArchivalChange[name]))}

function check_required(o::DnaOligosArchivalChange)
    true
end

function OpenAPI.validate_property(::Type{ DnaOligosArchivalChange }, name::Symbol, val)
end
