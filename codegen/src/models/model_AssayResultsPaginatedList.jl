# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AssayResultsPaginatedList

    AssayResultsPaginatedList(;
        assayResults=nothing,
        nextToken=nothing,
    )

    - assayResults::Vector{AssayResult}
    - nextToken::String
"""
Base.@kwdef mutable struct AssayResultsPaginatedList <: OpenAPI.APIModel
    assayResults::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{AssayResult} }
    nextToken::Union{Nothing, String} = nothing

    function AssayResultsPaginatedList(assayResults, nextToken, )
        OpenAPI.validate_property(AssayResultsPaginatedList, Symbol("assayResults"), assayResults)
        OpenAPI.validate_property(AssayResultsPaginatedList, Symbol("nextToken"), nextToken)
        return new(assayResults, nextToken, )
    end
end # type AssayResultsPaginatedList

const _property_types_AssayResultsPaginatedList = Dict{Symbol,String}(Symbol("assayResults")=>"Vector{AssayResult}", Symbol("nextToken")=>"String", )
OpenAPI.property_type(::Type{ AssayResultsPaginatedList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AssayResultsPaginatedList[name]))}

function check_required(o::AssayResultsPaginatedList)
    true
end

function OpenAPI.validate_property(::Type{ AssayResultsPaginatedList }, name::Symbol, val)
end
