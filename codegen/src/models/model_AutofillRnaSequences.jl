# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AutofillRnaSequences

    AutofillRnaSequences(;
        rnaSequenceIds=nothing,
    )

    - rnaSequenceIds::Vector{String} : Array of RNA sequence IDs.
"""
Base.@kwdef mutable struct AutofillRnaSequences <: OpenAPI.APIModel
    rnaSequenceIds::Union{Nothing, Vector{String}} = nothing

    function AutofillRnaSequences(rnaSequenceIds, )
        OpenAPI.validate_property(AutofillRnaSequences, Symbol("rnaSequenceIds"), rnaSequenceIds)
        return new(rnaSequenceIds, )
    end
end # type AutofillRnaSequences

const _property_types_AutofillRnaSequences = Dict{Symbol,String}(Symbol("rnaSequenceIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ AutofillRnaSequences }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AutofillRnaSequences[name]))}

function check_required(o::AutofillRnaSequences)
    o.rnaSequenceIds === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AutofillRnaSequences }, name::Symbol, val)
    if name === Symbol("rnaSequenceIds")
        OpenAPI.validate_param(name, "AutofillRnaSequences", :maxItems, val, 1000)
    end
end
