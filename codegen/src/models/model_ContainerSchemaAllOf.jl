# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ContainerSchema_allOf

    ContainerSchemaAllOf(;
        modifiedAt=nothing,
        type=nothing,
    )

    - modifiedAt::ZonedDateTime : DateTime the Container Schema was last modified
    - type::String
"""
Base.@kwdef mutable struct ContainerSchemaAllOf <: OpenAPI.APIModel
    modifiedAt::Union{Nothing, ZonedDateTime} = nothing
    type::Union{Nothing, String} = nothing

    function ContainerSchemaAllOf(modifiedAt, type, )
        OpenAPI.validate_property(ContainerSchemaAllOf, Symbol("modifiedAt"), modifiedAt)
        OpenAPI.validate_property(ContainerSchemaAllOf, Symbol("type"), type)
        return new(modifiedAt, type, )
    end
end # type ContainerSchemaAllOf

const _property_types_ContainerSchemaAllOf = Dict{Symbol,String}(Symbol("modifiedAt")=>"ZonedDateTime", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ ContainerSchemaAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ContainerSchemaAllOf[name]))}

function check_required(o::ContainerSchemaAllOf)
    true
end

function OpenAPI.validate_property(::Type{ ContainerSchemaAllOf }, name::Symbol, val)
    if name === Symbol("modifiedAt")
        OpenAPI.validate_param(name, "ContainerSchemaAllOf", :format, val, "date-time")
    end
    if name === Symbol("type")
        OpenAPI.validate_param(name, "ContainerSchemaAllOf", :enum, val, ["container"])
    end
end
