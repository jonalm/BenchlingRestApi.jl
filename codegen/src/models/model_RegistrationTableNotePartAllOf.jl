# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RegistrationTableNotePart_allOf

    RegistrationTableNotePartAllOf(;
        entitySchemaId=nothing,
        type=nothing,
    )

    - entitySchemaId::String
    - type::String
"""
Base.@kwdef mutable struct RegistrationTableNotePartAllOf <: OpenAPI.APIModel
    entitySchemaId::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function RegistrationTableNotePartAllOf(entitySchemaId, type, )
        OpenAPI.validate_property(RegistrationTableNotePartAllOf, Symbol("entitySchemaId"), entitySchemaId)
        OpenAPI.validate_property(RegistrationTableNotePartAllOf, Symbol("type"), type)
        return new(entitySchemaId, type, )
    end
end # type RegistrationTableNotePartAllOf

const _property_types_RegistrationTableNotePartAllOf = Dict{Symbol,String}(Symbol("entitySchemaId")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ RegistrationTableNotePartAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RegistrationTableNotePartAllOf[name]))}

function check_required(o::RegistrationTableNotePartAllOf)
    true
end

function OpenAPI.validate_property(::Type{ RegistrationTableNotePartAllOf }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "RegistrationTableNotePartAllOf", :enum, val, ["registration_table"])
    end
end
