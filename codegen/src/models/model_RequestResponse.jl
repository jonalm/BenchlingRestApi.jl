# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RequestResponse

    RequestResponse(;
        results=nothing,
        samples=nothing,
    )

    - results::Vector{AssayResult}
    - samples::Vector{RequestResponseSamplesInner} : Array of samples produced by the request.
"""
Base.@kwdef mutable struct RequestResponse <: OpenAPI.APIModel
    results::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{AssayResult} }
    samples::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{RequestResponseSamplesInner} }

    function RequestResponse(results, samples, )
        OpenAPI.validate_property(RequestResponse, Symbol("results"), results)
        OpenAPI.validate_property(RequestResponse, Symbol("samples"), samples)
        return new(results, samples, )
    end
end # type RequestResponse

const _property_types_RequestResponse = Dict{Symbol,String}(Symbol("results")=>"Vector{AssayResult}", Symbol("samples")=>"Vector{RequestResponseSamplesInner}", )
OpenAPI.property_type(::Type{ RequestResponse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RequestResponse[name]))}

function check_required(o::RequestResponse)
    true
end

function OpenAPI.validate_property(::Type{ RequestResponse }, name::Symbol, val)
end
