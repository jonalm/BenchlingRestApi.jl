# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AaSequenceSummary

    AaSequenceSummary(;
        entityType=nothing,
        id=nothing,
        type=nothing,
    )

    - entityType::String
    - id::String
    - type::String
"""
Base.@kwdef mutable struct AaSequenceSummary <: OpenAPI.APIModel
    entityType::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function AaSequenceSummary(entityType, id, type, )
        OpenAPI.validate_property(AaSequenceSummary, Symbol("entityType"), entityType)
        OpenAPI.validate_property(AaSequenceSummary, Symbol("id"), id)
        OpenAPI.validate_property(AaSequenceSummary, Symbol("type"), type)
        return new(entityType, id, type, )
    end
end # type AaSequenceSummary

const _property_types_AaSequenceSummary = Dict{Symbol,String}(Symbol("entityType")=>"String", Symbol("id")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ AaSequenceSummary }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AaSequenceSummary[name]))}

function check_required(o::AaSequenceSummary)
    true
end

function OpenAPI.validate_property(::Type{ AaSequenceSummary }, name::Symbol, val)
    if name === Symbol("entityType")
        OpenAPI.validate_param(name, "AaSequenceSummary", :enum, val, ["aa_sequence"])
    end
end
