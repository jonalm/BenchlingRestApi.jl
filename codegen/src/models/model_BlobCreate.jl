# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BlobCreate

    BlobCreate(;
        data64=nothing,
        md5=nothing,
        mimeType="application/octet-stream",
        name=nothing,
        type=nothing,
    )

    - data64::Vector{UInt8} : base64 encoded file contents
    - md5::String : The MD5 hash of the blob part. Note: this should be the hash of the raw data of the blob part, not the hash of the base64 encoding. 
    - mimeType::String : eg. application/jpeg
    - name::String : Name of the blob
    - type::String : One of RAW_FILE or VISUALIZATION. If VISUALIZATION, the blob may be displayed as an image preview. 
"""
Base.@kwdef mutable struct BlobCreate <: OpenAPI.APIModel
    data64::Union{Nothing, Vector{UInt8}} = nothing
    md5::Union{Nothing, String} = nothing
    mimeType::Union{Nothing, String} = "application/octet-stream"
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function BlobCreate(data64, md5, mimeType, name, type, )
        OpenAPI.validate_property(BlobCreate, Symbol("data64"), data64)
        OpenAPI.validate_property(BlobCreate, Symbol("md5"), md5)
        OpenAPI.validate_property(BlobCreate, Symbol("mimeType"), mimeType)
        OpenAPI.validate_property(BlobCreate, Symbol("name"), name)
        OpenAPI.validate_property(BlobCreate, Symbol("type"), type)
        return new(data64, md5, mimeType, name, type, )
    end
end # type BlobCreate

const _property_types_BlobCreate = Dict{Symbol,String}(Symbol("data64")=>"Vector{UInt8}", Symbol("md5")=>"String", Symbol("mimeType")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ BlobCreate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BlobCreate[name]))}

function check_required(o::BlobCreate)
    o.data64 === nothing && (return false)
    o.md5 === nothing && (return false)
    o.name === nothing && (return false)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ BlobCreate }, name::Symbol, val)
    if name === Symbol("data64")
        OpenAPI.validate_param(name, "BlobCreate", :format, val, "byte")
    end
    if name === Symbol("mimeType")
        OpenAPI.validate_param(name, "BlobCreate", :maxLength, val, 100)
    end
    if name === Symbol("name")
        OpenAPI.validate_param(name, "BlobCreate", :maxLength, val, 1000)
    end
    if name === Symbol("type")
        OpenAPI.validate_param(name, "BlobCreate", :enum, val, ["RAW_FILE", "VISUALIZATION"])
    end
end
