# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FeatureUpdate
Inputs for updating a feature

    FeatureUpdate(;
        color=nothing,
        featureLibraryId=nothing,
        featureType=nothing,
        name=nothing,
        pattern=nothing,
    )

    - color::String : The color of the annotations generated by the feature. Must be a valid hex string
    - featureLibraryId::String : The id of the feature library the feature belongs to
    - featureType::String : The type of feature, like gene, promoter, etc. Note: This is an arbitrary string, not an enum 
    - name::String : The name of the feature
    - pattern::String : The pattern used for matching during auto-annotation.
"""
Base.@kwdef mutable struct FeatureUpdate <: OpenAPI.APIModel
    color::Union{Nothing, String} = nothing
    featureLibraryId::Union{Nothing, String} = nothing
    featureType::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    pattern::Union{Nothing, String} = nothing

    function FeatureUpdate(color, featureLibraryId, featureType, name, pattern, )
        OpenAPI.validate_property(FeatureUpdate, Symbol("color"), color)
        OpenAPI.validate_property(FeatureUpdate, Symbol("featureLibraryId"), featureLibraryId)
        OpenAPI.validate_property(FeatureUpdate, Symbol("featureType"), featureType)
        OpenAPI.validate_property(FeatureUpdate, Symbol("name"), name)
        OpenAPI.validate_property(FeatureUpdate, Symbol("pattern"), pattern)
        return new(color, featureLibraryId, featureType, name, pattern, )
    end
end # type FeatureUpdate

const _property_types_FeatureUpdate = Dict{Symbol,String}(Symbol("color")=>"String", Symbol("featureLibraryId")=>"String", Symbol("featureType")=>"String", Symbol("name")=>"String", Symbol("pattern")=>"String", )
OpenAPI.property_type(::Type{ FeatureUpdate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FeatureUpdate[name]))}

function check_required(o::FeatureUpdate)
    true
end

function OpenAPI.validate_property(::Type{ FeatureUpdate }, name::Symbol, val)
end
