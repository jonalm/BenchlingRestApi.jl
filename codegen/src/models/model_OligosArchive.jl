# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OligosArchive
The request body for archiving Oligos. 

    OligosArchive(;
        oligoIds=nothing,
        reason=nothing,
    )

    - oligoIds::Vector{String}
    - reason::EntityArchiveReason
"""
Base.@kwdef mutable struct OligosArchive <: OpenAPI.APIModel
    oligoIds::Union{Nothing, Vector{String}} = nothing
    reason = nothing # spec type: Union{ Nothing, EntityArchiveReason }

    function OligosArchive(oligoIds, reason, )
        OpenAPI.validate_property(OligosArchive, Symbol("oligoIds"), oligoIds)
        OpenAPI.validate_property(OligosArchive, Symbol("reason"), reason)
        return new(oligoIds, reason, )
    end
end # type OligosArchive

const _property_types_OligosArchive = Dict{Symbol,String}(Symbol("oligoIds")=>"Vector{String}", Symbol("reason")=>"EntityArchiveReason", )
OpenAPI.property_type(::Type{ OligosArchive }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OligosArchive[name]))}

function check_required(o::OligosArchive)
    o.oligoIds === nothing && (return false)
    o.reason === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OligosArchive }, name::Symbol, val)
end
