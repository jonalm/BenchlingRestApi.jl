# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ContainerTransferDestinationContentsItem

    ContainerTransferDestinationContentsItem(;
        concentration=nothing,
        entityId=nothing,
    )

    - concentration::Measurement
    - entityId::String
"""
Base.@kwdef mutable struct ContainerTransferDestinationContentsItem <: OpenAPI.APIModel
    concentration = nothing # spec type: Union{ Nothing, Measurement }
    entityId::Union{Nothing, String} = nothing

    function ContainerTransferDestinationContentsItem(concentration, entityId, )
        OpenAPI.validate_property(ContainerTransferDestinationContentsItem, Symbol("concentration"), concentration)
        OpenAPI.validate_property(ContainerTransferDestinationContentsItem, Symbol("entityId"), entityId)
        return new(concentration, entityId, )
    end
end # type ContainerTransferDestinationContentsItem

const _property_types_ContainerTransferDestinationContentsItem = Dict{Symbol,String}(Symbol("concentration")=>"Measurement", Symbol("entityId")=>"String", )
OpenAPI.property_type(::Type{ ContainerTransferDestinationContentsItem }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ContainerTransferDestinationContentsItem[name]))}

function check_required(o::ContainerTransferDestinationContentsItem)
    o.entityId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ContainerTransferDestinationContentsItem }, name::Symbol, val)
end
