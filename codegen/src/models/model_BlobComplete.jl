# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BlobComplete

    BlobComplete(;
        parts=nothing,
    )

    - parts::Vector{BlobPart}
"""
Base.@kwdef mutable struct BlobComplete <: OpenAPI.APIModel
    parts::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{BlobPart} }

    function BlobComplete(parts, )
        OpenAPI.validate_property(BlobComplete, Symbol("parts"), parts)
        return new(parts, )
    end
end # type BlobComplete

const _property_types_BlobComplete = Dict{Symbol,String}(Symbol("parts")=>"Vector{BlobPart}", )
OpenAPI.property_type(::Type{ BlobComplete }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BlobComplete[name]))}

function check_required(o::BlobComplete)
    true
end

function OpenAPI.validate_property(::Type{ BlobComplete }, name::Symbol, val)
end
