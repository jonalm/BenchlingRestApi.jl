# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EntryUpdatedFieldsEvent_allOf

    EntryUpdatedFieldsEventAllOf(;
        entry=nothing,
        eventType=nothing,
    )

    - entry::Entry
    - eventType::String
"""
Base.@kwdef mutable struct EntryUpdatedFieldsEventAllOf <: OpenAPI.APIModel
    entry = nothing # spec type: Union{ Nothing, Entry }
    eventType::Union{Nothing, String} = nothing

    function EntryUpdatedFieldsEventAllOf(entry, eventType, )
        OpenAPI.validate_property(EntryUpdatedFieldsEventAllOf, Symbol("entry"), entry)
        OpenAPI.validate_property(EntryUpdatedFieldsEventAllOf, Symbol("eventType"), eventType)
        return new(entry, eventType, )
    end
end # type EntryUpdatedFieldsEventAllOf

const _property_types_EntryUpdatedFieldsEventAllOf = Dict{Symbol,String}(Symbol("entry")=>"Entry", Symbol("eventType")=>"String", )
OpenAPI.property_type(::Type{ EntryUpdatedFieldsEventAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EntryUpdatedFieldsEventAllOf[name]))}

function check_required(o::EntryUpdatedFieldsEventAllOf)
    true
end

function OpenAPI.validate_property(::Type{ EntryUpdatedFieldsEventAllOf }, name::Symbol, val)
    if name === Symbol("eventType")
        OpenAPI.validate_param(name, "EntryUpdatedFieldsEventAllOf", :enum, val, ["v2.entry.updated.fields"])
    end
end
