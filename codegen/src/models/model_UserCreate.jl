# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UserCreate

    UserCreate(;
        email=nothing,
        handle=nothing,
        name=nothing,
    )

    - email::String : Email of the User
    - handle::String : Handle of the User
    - name::String : Name of the User
"""
Base.@kwdef mutable struct UserCreate <: OpenAPI.APIModel
    email::Union{Nothing, String} = nothing
    handle::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing

    function UserCreate(email, handle, name, )
        OpenAPI.validate_property(UserCreate, Symbol("email"), email)
        OpenAPI.validate_property(UserCreate, Symbol("handle"), handle)
        OpenAPI.validate_property(UserCreate, Symbol("name"), name)
        return new(email, handle, name, )
    end
end # type UserCreate

const _property_types_UserCreate = Dict{Symbol,String}(Symbol("email")=>"String", Symbol("handle")=>"String", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ UserCreate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UserCreate[name]))}

function check_required(o::UserCreate)
    o.email === nothing && (return false)
    o.handle === nothing && (return false)
    o.name === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UserCreate }, name::Symbol, val)
end
