# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BlobUrl

    BlobUrl(;
        downloadURL=nothing,
        expiresAt=nothing,
    )

    - downloadURL::String : a pre-signed download url.
    - expiresAt::Int64 : The unix time that the download URL expires at.
"""
Base.@kwdef mutable struct BlobUrl <: OpenAPI.APIModel
    downloadURL::Union{Nothing, String} = nothing
    expiresAt::Union{Nothing, Int64} = nothing

    function BlobUrl(downloadURL, expiresAt, )
        OpenAPI.validate_property(BlobUrl, Symbol("downloadURL"), downloadURL)
        OpenAPI.validate_property(BlobUrl, Symbol("expiresAt"), expiresAt)
        return new(downloadURL, expiresAt, )
    end
end # type BlobUrl

const _property_types_BlobUrl = Dict{Symbol,String}(Symbol("downloadURL")=>"String", Symbol("expiresAt")=>"Int64", )
OpenAPI.property_type(::Type{ BlobUrl }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BlobUrl[name]))}

function check_required(o::BlobUrl)
    true
end

function OpenAPI.validate_property(::Type{ BlobUrl }, name::Symbol, val)
    if name === Symbol("downloadURL")
        OpenAPI.validate_param(name, "BlobUrl", :format, val, "uri")
    end
end
