# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""FeatureLibrariesPaginatedList
A paginated list of feature libraries

    FeatureLibrariesPaginatedList(;
        nextToken=nothing,
        featureLibraries=nothing,
    )

    - nextToken::String
    - featureLibraries::Vector{FeatureLibrary}
"""
Base.@kwdef mutable struct FeatureLibrariesPaginatedList <: OpenAPI.APIModel
    nextToken::Union{Nothing, String} = nothing
    featureLibraries::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{FeatureLibrary} }

    function FeatureLibrariesPaginatedList(nextToken, featureLibraries, )
        OpenAPI.validate_property(FeatureLibrariesPaginatedList, Symbol("nextToken"), nextToken)
        OpenAPI.validate_property(FeatureLibrariesPaginatedList, Symbol("featureLibraries"), featureLibraries)
        return new(nextToken, featureLibraries, )
    end
end # type FeatureLibrariesPaginatedList

const _property_types_FeatureLibrariesPaginatedList = Dict{Symbol,String}(Symbol("nextToken")=>"String", Symbol("featureLibraries")=>"Vector{FeatureLibrary}", )
OpenAPI.property_type(::Type{ FeatureLibrariesPaginatedList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FeatureLibrariesPaginatedList[name]))}

function check_required(o::FeatureLibrariesPaginatedList)
    true
end

function OpenAPI.validate_property(::Type{ FeatureLibrariesPaginatedList }, name::Symbol, val)
end
