# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UserBulkUpdate

    UserBulkUpdate(;
        id=nothing,
        email=nothing,
        handle=nothing,
        isSuspended=nothing,
        name=nothing,
    )

    - id::String
    - email::String : Email of the User
    - handle::String : Handle of the User
    - isSuspended::Bool : Suspended status of the User
    - name::String : Name of the User
"""
Base.@kwdef mutable struct UserBulkUpdate <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    email::Union{Nothing, String} = nothing
    handle::Union{Nothing, String} = nothing
    isSuspended::Union{Nothing, Bool} = nothing
    name::Union{Nothing, String} = nothing

    function UserBulkUpdate(id, email, handle, isSuspended, name, )
        OpenAPI.validate_property(UserBulkUpdate, Symbol("id"), id)
        OpenAPI.validate_property(UserBulkUpdate, Symbol("email"), email)
        OpenAPI.validate_property(UserBulkUpdate, Symbol("handle"), handle)
        OpenAPI.validate_property(UserBulkUpdate, Symbol("isSuspended"), isSuspended)
        OpenAPI.validate_property(UserBulkUpdate, Symbol("name"), name)
        return new(id, email, handle, isSuspended, name, )
    end
end # type UserBulkUpdate

const _property_types_UserBulkUpdate = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("email")=>"String", Symbol("handle")=>"String", Symbol("isSuspended")=>"Bool", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ UserBulkUpdate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UserBulkUpdate[name]))}

function check_required(o::UserBulkUpdate)
    o.id === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UserBulkUpdate }, name::Symbol, val)
end
