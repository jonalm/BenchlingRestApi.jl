# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Translation_allOf_regions

    TranslationAllOfRegions(;
        var"end"=nothing,
        start=nothing,
    )

    - var"end"::Int64
    - start::Int64
"""
Base.@kwdef mutable struct TranslationAllOfRegions <: OpenAPI.APIModel
    var"end"::Union{Nothing, Int64} = nothing
    start::Union{Nothing, Int64} = nothing

    function TranslationAllOfRegions(var"end", start, )
        OpenAPI.validate_property(TranslationAllOfRegions, Symbol("end"), var"end")
        OpenAPI.validate_property(TranslationAllOfRegions, Symbol("start"), start)
        return new(var"end", start, )
    end
end # type TranslationAllOfRegions

const _property_types_TranslationAllOfRegions = Dict{Symbol,String}(Symbol("end")=>"Int64", Symbol("start")=>"Int64", )
OpenAPI.property_type(::Type{ TranslationAllOfRegions }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TranslationAllOfRegions[name]))}

function check_required(o::TranslationAllOfRegions)
    true
end

function OpenAPI.validate_property(::Type{ TranslationAllOfRegions }, name::Symbol, val)
end
