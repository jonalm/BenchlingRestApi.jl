# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""LegacyWorkflow

    LegacyWorkflow(;
        createdAt=nothing,
        description=nothing,
        displayId=nothing,
        id=nothing,
        name=nothing,
        projectId=nothing,
    )

    - createdAt::ZonedDateTime : DateTime at which the the legacy workflow was created
    - description::String : Description of the legacy workflow
    - displayId::String : User-friendly ID of the legacy workflow
    - id::String : ID of the legacy workflow
    - name::String : Name of the legacy workflow
    - projectId::String : ID of the project that contains the legacy workflow
"""
Base.@kwdef mutable struct LegacyWorkflow <: OpenAPI.APIModel
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    description::Union{Nothing, String} = nothing
    displayId::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    projectId::Union{Nothing, String} = nothing

    function LegacyWorkflow(createdAt, description, displayId, id, name, projectId, )
        OpenAPI.validate_property(LegacyWorkflow, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(LegacyWorkflow, Symbol("description"), description)
        OpenAPI.validate_property(LegacyWorkflow, Symbol("displayId"), displayId)
        OpenAPI.validate_property(LegacyWorkflow, Symbol("id"), id)
        OpenAPI.validate_property(LegacyWorkflow, Symbol("name"), name)
        OpenAPI.validate_property(LegacyWorkflow, Symbol("projectId"), projectId)
        return new(createdAt, description, displayId, id, name, projectId, )
    end
end # type LegacyWorkflow

const _property_types_LegacyWorkflow = Dict{Symbol,String}(Symbol("createdAt")=>"ZonedDateTime", Symbol("description")=>"String", Symbol("displayId")=>"String", Symbol("id")=>"String", Symbol("name")=>"String", Symbol("projectId")=>"String", )
OpenAPI.property_type(::Type{ LegacyWorkflow }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LegacyWorkflow[name]))}

function check_required(o::LegacyWorkflow)
    true
end

function OpenAPI.validate_property(::Type{ LegacyWorkflow }, name::Symbol, val)
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "LegacyWorkflow", :format, val, "date-time")
    end
end
