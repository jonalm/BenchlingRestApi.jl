# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WorkflowTaskStatus

    WorkflowTaskStatus(;
        displayName=nothing,
        id=nothing,
        statusType=nothing,
    )

    - displayName::String : The status label
    - id::String : The ID of the workflow task status
    - statusType::String : The status type
"""
Base.@kwdef mutable struct WorkflowTaskStatus <: OpenAPI.APIModel
    displayName::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    statusType::Union{Nothing, String} = nothing

    function WorkflowTaskStatus(displayName, id, statusType, )
        OpenAPI.validate_property(WorkflowTaskStatus, Symbol("displayName"), displayName)
        OpenAPI.validate_property(WorkflowTaskStatus, Symbol("id"), id)
        OpenAPI.validate_property(WorkflowTaskStatus, Symbol("statusType"), statusType)
        return new(displayName, id, statusType, )
    end
end # type WorkflowTaskStatus

const _property_types_WorkflowTaskStatus = Dict{Symbol,String}(Symbol("displayName")=>"String", Symbol("id")=>"String", Symbol("statusType")=>"String", )
OpenAPI.property_type(::Type{ WorkflowTaskStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WorkflowTaskStatus[name]))}

function check_required(o::WorkflowTaskStatus)
    true
end

function OpenAPI.validate_property(::Type{ WorkflowTaskStatus }, name::Symbol, val)
    if name === Symbol("statusType")
        OpenAPI.validate_param(name, "WorkflowTaskStatus", :enum, val, ["PENDING", "IN_PROGRESS", "FAILED", "CANCELLED", "INVALID", "COMPLETED"])
    end
end
