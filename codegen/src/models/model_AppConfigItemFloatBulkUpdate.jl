# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AppConfigItemFloatBulkUpdate

    AppConfigItemFloatBulkUpdate(;
        type=nothing,
        value=nothing,
        id=nothing,
    )

    - type::String
    - value::Float32
    - id::String
"""
Base.@kwdef mutable struct AppConfigItemFloatBulkUpdate <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing
    value::Union{Nothing, Float32} = nothing
    id::Union{Nothing, String} = nothing

    function AppConfigItemFloatBulkUpdate(type, value, id, )
        OpenAPI.validate_property(AppConfigItemFloatBulkUpdate, Symbol("type"), type)
        OpenAPI.validate_property(AppConfigItemFloatBulkUpdate, Symbol("value"), value)
        OpenAPI.validate_property(AppConfigItemFloatBulkUpdate, Symbol("id"), id)
        return new(type, value, id, )
    end
end # type AppConfigItemFloatBulkUpdate

const _property_types_AppConfigItemFloatBulkUpdate = Dict{Symbol,String}(Symbol("type")=>"String", Symbol("value")=>"Float32", Symbol("id")=>"String", )
OpenAPI.property_type(::Type{ AppConfigItemFloatBulkUpdate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AppConfigItemFloatBulkUpdate[name]))}

function check_required(o::AppConfigItemFloatBulkUpdate)
    o.type === nothing && (return false)
    o.value === nothing && (return false)
    o.id === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AppConfigItemFloatBulkUpdate }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "AppConfigItemFloatBulkUpdate", :enum, val, ["float"])
    end
    if name === Symbol("value")
        OpenAPI.validate_param(name, "AppConfigItemFloatBulkUpdate", :format, val, "float")
    end
end
