# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SimpleFieldDefinition_allOf

    SimpleFieldDefinitionAllOf(;
        type=nothing,
    )

    - type::String
"""
Base.@kwdef mutable struct SimpleFieldDefinitionAllOf <: OpenAPI.APIModel
    type::Union{Nothing, String} = nothing

    function SimpleFieldDefinitionAllOf(type, )
        OpenAPI.validate_property(SimpleFieldDefinitionAllOf, Symbol("type"), type)
        return new(type, )
    end
end # type SimpleFieldDefinitionAllOf

const _property_types_SimpleFieldDefinitionAllOf = Dict{Symbol,String}(Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ SimpleFieldDefinitionAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SimpleFieldDefinitionAllOf[name]))}

function check_required(o::SimpleFieldDefinitionAllOf)
    true
end

function OpenAPI.validate_property(::Type{ SimpleFieldDefinitionAllOf }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "SimpleFieldDefinitionAllOf", :enum, val, ["dna_sequence_link", "aa_sequence_link", "custom_entity_link", "mixture_link", "blob_link", "text", "long_text", "boolean", "datetime", "date", "json"])
    end
end
