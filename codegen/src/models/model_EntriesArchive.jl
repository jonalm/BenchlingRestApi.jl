# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EntriesArchive

    EntriesArchive(;
        entryIds=nothing,
        reason=nothing,
    )

    - entryIds::Vector{String} : Array of entry IDs
    - reason::String : Reason that entries are being archived. One of [\&quot;Made in error\&quot;, \&quot;Retired\&quot;, \&quot;Other\&quot;]. 
"""
Base.@kwdef mutable struct EntriesArchive <: OpenAPI.APIModel
    entryIds::Union{Nothing, Vector{String}} = nothing
    reason::Union{Nothing, String} = nothing

    function EntriesArchive(entryIds, reason, )
        OpenAPI.validate_property(EntriesArchive, Symbol("entryIds"), entryIds)
        OpenAPI.validate_property(EntriesArchive, Symbol("reason"), reason)
        return new(entryIds, reason, )
    end
end # type EntriesArchive

const _property_types_EntriesArchive = Dict{Symbol,String}(Symbol("entryIds")=>"Vector{String}", Symbol("reason")=>"String", )
OpenAPI.property_type(::Type{ EntriesArchive }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EntriesArchive[name]))}

function check_required(o::EntriesArchive)
    o.entryIds === nothing && (return false)
    o.reason === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ EntriesArchive }, name::Symbol, val)
    if name === Symbol("reason")
        OpenAPI.validate_param(name, "EntriesArchive", :enum, val, ["Made in error", "Retired", "Other"])
    end
end
