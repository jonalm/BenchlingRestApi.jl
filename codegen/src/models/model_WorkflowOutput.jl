# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WorkflowOutput

    WorkflowOutput(;
        displayId=nothing,
        id=nothing,
        creationOrigin=nothing,
        fields=nothing,
        task=nothing,
        webURL=nothing,
        workflowTaskGroup=nothing,
    )

    - displayId::String : User-friendly ID of the workflow task group
    - id::String : The ID of the workflow output
    - creationOrigin::CreationOrigin
    - fields::Dict{String, Field}
    - task::WorkflowTaskSummary
    - webURL::String : URL of the workflow output
    - workflowTaskGroup::WorkflowTaskGroupSummary
"""
Base.@kwdef mutable struct WorkflowOutput <: OpenAPI.APIModel
    displayId::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    creationOrigin = nothing # spec type: Union{ Nothing, CreationOrigin }
    fields::Union{Nothing, Dict} = nothing # spec type: Union{ Nothing, Dict{String, Field} }
    task = nothing # spec type: Union{ Nothing, WorkflowTaskSummary }
    webURL::Union{Nothing, String} = nothing
    workflowTaskGroup = nothing # spec type: Union{ Nothing, WorkflowTaskGroupSummary }

    function WorkflowOutput(displayId, id, creationOrigin, fields, task, webURL, workflowTaskGroup, )
        OpenAPI.validate_property(WorkflowOutput, Symbol("displayId"), displayId)
        OpenAPI.validate_property(WorkflowOutput, Symbol("id"), id)
        OpenAPI.validate_property(WorkflowOutput, Symbol("creationOrigin"), creationOrigin)
        OpenAPI.validate_property(WorkflowOutput, Symbol("fields"), fields)
        OpenAPI.validate_property(WorkflowOutput, Symbol("task"), task)
        OpenAPI.validate_property(WorkflowOutput, Symbol("webURL"), webURL)
        OpenAPI.validate_property(WorkflowOutput, Symbol("workflowTaskGroup"), workflowTaskGroup)
        return new(displayId, id, creationOrigin, fields, task, webURL, workflowTaskGroup, )
    end
end # type WorkflowOutput

const _property_types_WorkflowOutput = Dict{Symbol,String}(Symbol("displayId")=>"String", Symbol("id")=>"String", Symbol("creationOrigin")=>"CreationOrigin", Symbol("fields")=>"Dict{String, Field}", Symbol("task")=>"WorkflowTaskSummary", Symbol("webURL")=>"String", Symbol("workflowTaskGroup")=>"WorkflowTaskGroupSummary", )
OpenAPI.property_type(::Type{ WorkflowOutput }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WorkflowOutput[name]))}

function check_required(o::WorkflowOutput)
    true
end

function OpenAPI.validate_property(::Type{ WorkflowOutput }, name::Symbol, val)
    if name === Symbol("webURL")
        OpenAPI.validate_param(name, "WorkflowOutput", :format, val, "uri")
    end
end
