# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""listContainers_400_response

    ListContainers400Response(;
        invalidIds=nothing,
        error=nothing,
    )

    - invalidIds::Vector{String}
    - error::BadRequestErrorError
"""
Base.@kwdef mutable struct ListContainers400Response <: OpenAPI.APIModel
    invalidIds::Union{Nothing, Vector{String}} = nothing
    error = nothing # spec type: Union{ Nothing, BadRequestErrorError }

    function ListContainers400Response(invalidIds, error, )
        OpenAPI.validate_property(ListContainers400Response, Symbol("invalidIds"), invalidIds)
        OpenAPI.validate_property(ListContainers400Response, Symbol("error"), error)
        return new(invalidIds, error, )
    end
end # type ListContainers400Response

const _property_types_ListContainers400Response = Dict{Symbol,String}(Symbol("invalidIds")=>"Vector{String}", Symbol("error")=>"BadRequestErrorError", )
OpenAPI.property_type(::Type{ ListContainers400Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ListContainers400Response[name]))}

function check_required(o::ListContainers400Response)
    true
end

function OpenAPI.validate_property(::Type{ ListContainers400Response }, name::Symbol, val)
end
