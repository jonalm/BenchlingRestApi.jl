# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AutomationOutputProcessorsArchive

    AutomationOutputProcessorsArchive(;
        automationOutputProcessorIds=nothing,
        reason=nothing,
    )

    - automationOutputProcessorIds::Vector{String} : Array of automation output processor IDs
    - reason::String : The reason that the output processors are being archived. Accepted reasons may differ based on tenant configuration. 
"""
Base.@kwdef mutable struct AutomationOutputProcessorsArchive <: OpenAPI.APIModel
    automationOutputProcessorIds::Union{Nothing, Vector{String}} = nothing
    reason::Union{Nothing, String} = nothing

    function AutomationOutputProcessorsArchive(automationOutputProcessorIds, reason, )
        OpenAPI.validate_property(AutomationOutputProcessorsArchive, Symbol("automationOutputProcessorIds"), automationOutputProcessorIds)
        OpenAPI.validate_property(AutomationOutputProcessorsArchive, Symbol("reason"), reason)
        return new(automationOutputProcessorIds, reason, )
    end
end # type AutomationOutputProcessorsArchive

const _property_types_AutomationOutputProcessorsArchive = Dict{Symbol,String}(Symbol("automationOutputProcessorIds")=>"Vector{String}", Symbol("reason")=>"String", )
OpenAPI.property_type(::Type{ AutomationOutputProcessorsArchive }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AutomationOutputProcessorsArchive[name]))}

function check_required(o::AutomationOutputProcessorsArchive)
    o.automationOutputProcessorIds === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AutomationOutputProcessorsArchive }, name::Symbol, val)
    if name === Symbol("reason")
        OpenAPI.validate_param(name, "AutomationOutputProcessorsArchive", :enum, val, ["Made in error", "Retired", "Expended", "Shipped", "Contaminated", "Expired", "Missing", "Other"])
    end
end
