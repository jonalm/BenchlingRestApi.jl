# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DnaSequencePart_allOf

    DnaSequencePartAllOf(;
        strand=nothing,
    )

    - strand::Int64
"""
Base.@kwdef mutable struct DnaSequencePartAllOf <: OpenAPI.APIModel
    strand::Union{Nothing, Int64} = nothing

    function DnaSequencePartAllOf(strand, )
        OpenAPI.validate_property(DnaSequencePartAllOf, Symbol("strand"), strand)
        return new(strand, )
    end
end # type DnaSequencePartAllOf

const _property_types_DnaSequencePartAllOf = Dict{Symbol,String}(Symbol("strand")=>"Int64", )
OpenAPI.property_type(::Type{ DnaSequencePartAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DnaSequencePartAllOf[name]))}

function check_required(o::DnaSequencePartAllOf)
    true
end

function OpenAPI.validate_property(::Type{ DnaSequencePartAllOf }, name::Symbol, val)
    if name === Symbol("strand")
        OpenAPI.validate_param(name, "DnaSequencePartAllOf", :maximum, val, 1, false)
        OpenAPI.validate_param(name, "DnaSequencePartAllOf", :minimum, val, -1, false)
    end
end
