# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Primer

    Primer(;
        bases=nothing,
        bindPosition=nothing,
        color=nothing,
        var"end"=nothing,
        name=nothing,
        oligoId=nothing,
        overhangLength=nothing,
        start=nothing,
        strand=nothing,
    )

    - bases::String
    - bindPosition::Int64
    - color::String
    - var"end"::Int64
    - name::String
    - oligoId::String
    - overhangLength::Int64
    - start::Int64
    - strand::Int64
"""
Base.@kwdef mutable struct Primer <: OpenAPI.APIModel
    bases::Union{Nothing, String} = nothing
    bindPosition::Union{Nothing, Int64} = nothing
    color::Union{Nothing, String} = nothing
    var"end"::Union{Nothing, Int64} = nothing
    name::Union{Nothing, String} = nothing
    oligoId::Union{Nothing, String} = nothing
    overhangLength::Union{Nothing, Int64} = nothing
    start::Union{Nothing, Int64} = nothing
    strand::Union{Nothing, Int64} = nothing

    function Primer(bases, bindPosition, color, var"end", name, oligoId, overhangLength, start, strand, )
        OpenAPI.validate_property(Primer, Symbol("bases"), bases)
        OpenAPI.validate_property(Primer, Symbol("bindPosition"), bindPosition)
        OpenAPI.validate_property(Primer, Symbol("color"), color)
        OpenAPI.validate_property(Primer, Symbol("end"), var"end")
        OpenAPI.validate_property(Primer, Symbol("name"), name)
        OpenAPI.validate_property(Primer, Symbol("oligoId"), oligoId)
        OpenAPI.validate_property(Primer, Symbol("overhangLength"), overhangLength)
        OpenAPI.validate_property(Primer, Symbol("start"), start)
        OpenAPI.validate_property(Primer, Symbol("strand"), strand)
        return new(bases, bindPosition, color, var"end", name, oligoId, overhangLength, start, strand, )
    end
end # type Primer

const _property_types_Primer = Dict{Symbol,String}(Symbol("bases")=>"String", Symbol("bindPosition")=>"Int64", Symbol("color")=>"String", Symbol("end")=>"Int64", Symbol("name")=>"String", Symbol("oligoId")=>"String", Symbol("overhangLength")=>"Int64", Symbol("start")=>"Int64", Symbol("strand")=>"Int64", )
OpenAPI.property_type(::Type{ Primer }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Primer[name]))}

function check_required(o::Primer)
    true
end

function OpenAPI.validate_property(::Type{ Primer }, name::Symbol, val)
end
