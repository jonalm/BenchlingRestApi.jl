# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""StructuredTableColumnInfo

    StructuredTableColumnInfo(;
        columnId=nothing,
        isReadOnly=nothing,
        name=nothing,
    )

    - columnId::String
    - isReadOnly::Bool
    - name::String
"""
Base.@kwdef mutable struct StructuredTableColumnInfo <: OpenAPI.APIModel
    columnId::Union{Nothing, String} = nothing
    isReadOnly::Union{Nothing, Bool} = nothing
    name::Union{Nothing, String} = nothing

    function StructuredTableColumnInfo(columnId, isReadOnly, name, )
        OpenAPI.validate_property(StructuredTableColumnInfo, Symbol("columnId"), columnId)
        OpenAPI.validate_property(StructuredTableColumnInfo, Symbol("isReadOnly"), isReadOnly)
        OpenAPI.validate_property(StructuredTableColumnInfo, Symbol("name"), name)
        return new(columnId, isReadOnly, name, )
    end
end # type StructuredTableColumnInfo

const _property_types_StructuredTableColumnInfo = Dict{Symbol,String}(Symbol("columnId")=>"String", Symbol("isReadOnly")=>"Bool", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ StructuredTableColumnInfo }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StructuredTableColumnInfo[name]))}

function check_required(o::StructuredTableColumnInfo)
    true
end

function OpenAPI.validate_property(::Type{ StructuredTableColumnInfo }, name::Symbol, val)
end
