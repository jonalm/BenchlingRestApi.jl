# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PlateCreationTableNotePart_allOf

    PlateCreationTableNotePartAllOf(;
        plateSchemaId=nothing,
        type=nothing,
    )

    - plateSchemaId::String
    - type::String
"""
Base.@kwdef mutable struct PlateCreationTableNotePartAllOf <: OpenAPI.APIModel
    plateSchemaId::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function PlateCreationTableNotePartAllOf(plateSchemaId, type, )
        OpenAPI.validate_property(PlateCreationTableNotePartAllOf, Symbol("plateSchemaId"), plateSchemaId)
        OpenAPI.validate_property(PlateCreationTableNotePartAllOf, Symbol("type"), type)
        return new(plateSchemaId, type, )
    end
end # type PlateCreationTableNotePartAllOf

const _property_types_PlateCreationTableNotePartAllOf = Dict{Symbol,String}(Symbol("plateSchemaId")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ PlateCreationTableNotePartAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PlateCreationTableNotePartAllOf[name]))}

function check_required(o::PlateCreationTableNotePartAllOf)
    true
end

function OpenAPI.validate_property(::Type{ PlateCreationTableNotePartAllOf }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "PlateCreationTableNotePartAllOf", :enum, val, ["plate_creation_table"])
    end
end
