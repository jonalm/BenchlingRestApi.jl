# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WorkflowTaskGroupUpdatedWatchersEvent_allOf

    WorkflowTaskGroupUpdatedWatchersEventAllOf(;
        eventType=nothing,
        workflowTaskGroup=nothing,
    )

    - eventType::String
    - workflowTaskGroup::WorkflowTaskGroup
"""
Base.@kwdef mutable struct WorkflowTaskGroupUpdatedWatchersEventAllOf <: OpenAPI.APIModel
    eventType::Union{Nothing, String} = nothing
    workflowTaskGroup = nothing # spec type: Union{ Nothing, WorkflowTaskGroup }

    function WorkflowTaskGroupUpdatedWatchersEventAllOf(eventType, workflowTaskGroup, )
        OpenAPI.validate_property(WorkflowTaskGroupUpdatedWatchersEventAllOf, Symbol("eventType"), eventType)
        OpenAPI.validate_property(WorkflowTaskGroupUpdatedWatchersEventAllOf, Symbol("workflowTaskGroup"), workflowTaskGroup)
        return new(eventType, workflowTaskGroup, )
    end
end # type WorkflowTaskGroupUpdatedWatchersEventAllOf

const _property_types_WorkflowTaskGroupUpdatedWatchersEventAllOf = Dict{Symbol,String}(Symbol("eventType")=>"String", Symbol("workflowTaskGroup")=>"WorkflowTaskGroup", )
OpenAPI.property_type(::Type{ WorkflowTaskGroupUpdatedWatchersEventAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WorkflowTaskGroupUpdatedWatchersEventAllOf[name]))}

function check_required(o::WorkflowTaskGroupUpdatedWatchersEventAllOf)
    true
end

function OpenAPI.validate_property(::Type{ WorkflowTaskGroupUpdatedWatchersEventAllOf }, name::Symbol, val)
    if name === Symbol("eventType")
        OpenAPI.validate_param(name, "WorkflowTaskGroupUpdatedWatchersEventAllOf", :enum, val, ["v2.workflowTaskGroup.updated.watchers"])
    end
end
