# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WorkflowTaskGroupWriteBase

    WorkflowTaskGroupWriteBase(;
        folderId=nothing,
        name=nothing,
        watcherIds=nothing,
    )

    - folderId::String : ID of the folder that contains the workflow task group
    - name::String : The name of the workflow task group
    - watcherIds::Vector{String} : IDs of the users watching the workflow task group
"""
Base.@kwdef mutable struct WorkflowTaskGroupWriteBase <: OpenAPI.APIModel
    folderId::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    watcherIds::Union{Nothing, Vector{String}} = nothing

    function WorkflowTaskGroupWriteBase(folderId, name, watcherIds, )
        OpenAPI.validate_property(WorkflowTaskGroupWriteBase, Symbol("folderId"), folderId)
        OpenAPI.validate_property(WorkflowTaskGroupWriteBase, Symbol("name"), name)
        OpenAPI.validate_property(WorkflowTaskGroupWriteBase, Symbol("watcherIds"), watcherIds)
        return new(folderId, name, watcherIds, )
    end
end # type WorkflowTaskGroupWriteBase

const _property_types_WorkflowTaskGroupWriteBase = Dict{Symbol,String}(Symbol("folderId")=>"String", Symbol("name")=>"String", Symbol("watcherIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ WorkflowTaskGroupWriteBase }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WorkflowTaskGroupWriteBase[name]))}

function check_required(o::WorkflowTaskGroupWriteBase)
    true
end

function OpenAPI.validate_property(::Type{ WorkflowTaskGroupWriteBase }, name::Symbol, val)
end
