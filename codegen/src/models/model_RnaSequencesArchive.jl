# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RnaSequencesArchive
The request body for archiving RNA sequences. 

    RnaSequencesArchive(;
        reason=nothing,
        rnaSequenceIds=nothing,
    )

    - reason::EntityArchiveReason
    - rnaSequenceIds::Vector{String}
"""
Base.@kwdef mutable struct RnaSequencesArchive <: OpenAPI.APIModel
    reason = nothing # spec type: Union{ Nothing, EntityArchiveReason }
    rnaSequenceIds::Union{Nothing, Vector{String}} = nothing

    function RnaSequencesArchive(reason, rnaSequenceIds, )
        OpenAPI.validate_property(RnaSequencesArchive, Symbol("reason"), reason)
        OpenAPI.validate_property(RnaSequencesArchive, Symbol("rnaSequenceIds"), rnaSequenceIds)
        return new(reason, rnaSequenceIds, )
    end
end # type RnaSequencesArchive

const _property_types_RnaSequencesArchive = Dict{Symbol,String}(Symbol("reason")=>"EntityArchiveReason", Symbol("rnaSequenceIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ RnaSequencesArchive }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RnaSequencesArchive[name]))}

function check_required(o::RnaSequencesArchive)
    o.reason === nothing && (return false)
    o.rnaSequenceIds === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ RnaSequencesArchive }, name::Symbol, val)
end
