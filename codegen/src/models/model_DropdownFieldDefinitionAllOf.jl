# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DropdownFieldDefinition_allOf

    DropdownFieldDefinitionAllOf(;
        dropdownId=nothing,
        type=nothing,
    )

    - dropdownId::String
    - type::String
"""
Base.@kwdef mutable struct DropdownFieldDefinitionAllOf <: OpenAPI.APIModel
    dropdownId::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function DropdownFieldDefinitionAllOf(dropdownId, type, )
        OpenAPI.validate_property(DropdownFieldDefinitionAllOf, Symbol("dropdownId"), dropdownId)
        OpenAPI.validate_property(DropdownFieldDefinitionAllOf, Symbol("type"), type)
        return new(dropdownId, type, )
    end
end # type DropdownFieldDefinitionAllOf

const _property_types_DropdownFieldDefinitionAllOf = Dict{Symbol,String}(Symbol("dropdownId")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ DropdownFieldDefinitionAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DropdownFieldDefinitionAllOf[name]))}

function check_required(o::DropdownFieldDefinitionAllOf)
    true
end

function OpenAPI.validate_property(::Type{ DropdownFieldDefinitionAllOf }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "DropdownFieldDefinitionAllOf", :enum, val, ["dropdown"])
    end
end
