# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AaSequencesArchivalChange
IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of AA sequences along with any IDs of batches that were archived / unarchived. 

    AaSequencesArchivalChange(;
        aaSequenceIds=nothing,
        batchIds=nothing,
    )

    - aaSequenceIds::Vector{String}
    - batchIds::Vector{String}
"""
Base.@kwdef mutable struct AaSequencesArchivalChange <: OpenAPI.APIModel
    aaSequenceIds::Union{Nothing, Vector{String}} = nothing
    batchIds::Union{Nothing, Vector{String}} = nothing

    function AaSequencesArchivalChange(aaSequenceIds, batchIds, )
        OpenAPI.validate_property(AaSequencesArchivalChange, Symbol("aaSequenceIds"), aaSequenceIds)
        OpenAPI.validate_property(AaSequencesArchivalChange, Symbol("batchIds"), batchIds)
        return new(aaSequenceIds, batchIds, )
    end
end # type AaSequencesArchivalChange

const _property_types_AaSequencesArchivalChange = Dict{Symbol,String}(Symbol("aaSequenceIds")=>"Vector{String}", Symbol("batchIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ AaSequencesArchivalChange }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AaSequencesArchivalChange[name]))}

function check_required(o::AaSequencesArchivalChange)
    true
end

function OpenAPI.validate_property(::Type{ AaSequencesArchivalChange }, name::Symbol, val)
end
