# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExternalFileNotePart_allOf

    ExternalFileNotePartAllOf(;
        externalFileId=nothing,
        links=nothing,
        text=nothing,
        type=nothing,
    )

    - externalFileId::String : The ID of the external file. Use the &#39;Get an external file&#39; endpoint to retrieve metadata about it. 
    - links::Vector{EntryLink} : Array of links referenced in the caption via an @-mention, hyperlink, or the drag-n-dropped preview attached to the note. 
    - text::String : The caption of the file attachment.
    - type::String
"""
Base.@kwdef mutable struct ExternalFileNotePartAllOf <: OpenAPI.APIModel
    externalFileId::Union{Nothing, String} = nothing
    links::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{EntryLink} }
    text::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function ExternalFileNotePartAllOf(externalFileId, links, text, type, )
        OpenAPI.validate_property(ExternalFileNotePartAllOf, Symbol("externalFileId"), externalFileId)
        OpenAPI.validate_property(ExternalFileNotePartAllOf, Symbol("links"), links)
        OpenAPI.validate_property(ExternalFileNotePartAllOf, Symbol("text"), text)
        OpenAPI.validate_property(ExternalFileNotePartAllOf, Symbol("type"), type)
        return new(externalFileId, links, text, type, )
    end
end # type ExternalFileNotePartAllOf

const _property_types_ExternalFileNotePartAllOf = Dict{Symbol,String}(Symbol("externalFileId")=>"String", Symbol("links")=>"Vector{EntryLink}", Symbol("text")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ ExternalFileNotePartAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExternalFileNotePartAllOf[name]))}

function check_required(o::ExternalFileNotePartAllOf)
    true
end

function OpenAPI.validate_property(::Type{ ExternalFileNotePartAllOf }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "ExternalFileNotePartAllOf", :enum, val, ["external_file"])
    end
end
