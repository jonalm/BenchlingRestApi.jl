# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BaseAssaySchema_allOf

    BaseAssaySchemaAllOf(;
        derivedFrom=nothing,
        organization=nothing,
        systemName=nothing,
    )

    - derivedFrom::String
    - organization::BaseAssaySchemaAllOfOrganization
    - systemName::String
"""
Base.@kwdef mutable struct BaseAssaySchemaAllOf <: OpenAPI.APIModel
    derivedFrom::Union{Nothing, String} = nothing
    organization = nothing # spec type: Union{ Nothing, BaseAssaySchemaAllOfOrganization }
    systemName::Union{Nothing, String} = nothing

    function BaseAssaySchemaAllOf(derivedFrom, organization, systemName, )
        OpenAPI.validate_property(BaseAssaySchemaAllOf, Symbol("derivedFrom"), derivedFrom)
        OpenAPI.validate_property(BaseAssaySchemaAllOf, Symbol("organization"), organization)
        OpenAPI.validate_property(BaseAssaySchemaAllOf, Symbol("systemName"), systemName)
        return new(derivedFrom, organization, systemName, )
    end
end # type BaseAssaySchemaAllOf

const _property_types_BaseAssaySchemaAllOf = Dict{Symbol,String}(Symbol("derivedFrom")=>"String", Symbol("organization")=>"BaseAssaySchemaAllOfOrganization", Symbol("systemName")=>"String", )
OpenAPI.property_type(::Type{ BaseAssaySchemaAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BaseAssaySchemaAllOf[name]))}

function check_required(o::BaseAssaySchemaAllOf)
    true
end

function OpenAPI.validate_property(::Type{ BaseAssaySchemaAllOf }, name::Symbol, val)
end
