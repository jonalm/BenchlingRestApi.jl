# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""StructuredTableApiIdentifiers

    StructuredTableApiIdentifiers(;
        apiId=nothing,
        columns=nothing,
    )

    - apiId::String
    - columns::Vector{StructuredTableColumnInfo}
"""
Base.@kwdef mutable struct StructuredTableApiIdentifiers <: OpenAPI.APIModel
    apiId::Union{Nothing, String} = nothing
    columns::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{StructuredTableColumnInfo} }

    function StructuredTableApiIdentifiers(apiId, columns, )
        OpenAPI.validate_property(StructuredTableApiIdentifiers, Symbol("apiId"), apiId)
        OpenAPI.validate_property(StructuredTableApiIdentifiers, Symbol("columns"), columns)
        return new(apiId, columns, )
    end
end # type StructuredTableApiIdentifiers

const _property_types_StructuredTableApiIdentifiers = Dict{Symbol,String}(Symbol("apiId")=>"String", Symbol("columns")=>"Vector{StructuredTableColumnInfo}", )
OpenAPI.property_type(::Type{ StructuredTableApiIdentifiers }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_StructuredTableApiIdentifiers[name]))}

function check_required(o::StructuredTableApiIdentifiers)
    true
end

function OpenAPI.validate_property(::Type{ StructuredTableApiIdentifiers }, name::Symbol, val)
end
