# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ContainerTransferBase_transferVolume
Deprecated - use transferQuantity instead. 

    ContainerTransferBaseTransferVolume(;
        units=nothing,
        value=nothing,
    )

    - units::String
    - value::Float64
"""
Base.@kwdef mutable struct ContainerTransferBaseTransferVolume <: OpenAPI.APIModel
    units::Union{Nothing, String} = nothing
    value::Union{Nothing, Float64} = nothing

    function ContainerTransferBaseTransferVolume(units, value, )
        OpenAPI.validate_property(ContainerTransferBaseTransferVolume, Symbol("units"), units)
        OpenAPI.validate_property(ContainerTransferBaseTransferVolume, Symbol("value"), value)
        return new(units, value, )
    end
end # type ContainerTransferBaseTransferVolume

const _property_types_ContainerTransferBaseTransferVolume = Dict{Symbol,String}(Symbol("units")=>"String", Symbol("value")=>"Float64", )
OpenAPI.property_type(::Type{ ContainerTransferBaseTransferVolume }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ContainerTransferBaseTransferVolume[name]))}

function check_required(o::ContainerTransferBaseTransferVolume)
    true
end

function OpenAPI.validate_property(::Type{ ContainerTransferBaseTransferVolume }, name::Symbol, val)
    if name === Symbol("units")
        OpenAPI.validate_param(name, "ContainerTransferBaseTransferVolume", :enum, val, ["pL", "nL", "uL", "mL", "L", "null"])
    end
end
