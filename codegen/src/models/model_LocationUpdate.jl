# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""LocationUpdate

    LocationUpdate(;
        fields=nothing,
        name=nothing,
        parentStorageId=nothing,
    )

    - fields::Dict{String, Field}
    - name::String
    - parentStorageId::String
"""
Base.@kwdef mutable struct LocationUpdate <: OpenAPI.APIModel
    fields::Union{Nothing, Dict} = nothing # spec type: Union{ Nothing, Dict{String, Field} }
    name::Union{Nothing, String} = nothing
    parentStorageId::Union{Nothing, String} = nothing

    function LocationUpdate(fields, name, parentStorageId, )
        OpenAPI.validate_property(LocationUpdate, Symbol("fields"), fields)
        OpenAPI.validate_property(LocationUpdate, Symbol("name"), name)
        OpenAPI.validate_property(LocationUpdate, Symbol("parentStorageId"), parentStorageId)
        return new(fields, name, parentStorageId, )
    end
end # type LocationUpdate

const _property_types_LocationUpdate = Dict{Symbol,String}(Symbol("fields")=>"Dict{String, Field}", Symbol("name")=>"String", Symbol("parentStorageId")=>"String", )
OpenAPI.property_type(::Type{ LocationUpdate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_LocationUpdate[name]))}

function check_required(o::LocationUpdate)
    true
end

function OpenAPI.validate_property(::Type{ LocationUpdate }, name::Symbol, val)
end
