# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SchemaLinkFieldDefinition_allOf

    SchemaLinkFieldDefinitionAllOf(;
        schemaId=nothing,
        type=nothing,
    )

    - schemaId::String
    - type::String
"""
Base.@kwdef mutable struct SchemaLinkFieldDefinitionAllOf <: OpenAPI.APIModel
    schemaId::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function SchemaLinkFieldDefinitionAllOf(schemaId, type, )
        OpenAPI.validate_property(SchemaLinkFieldDefinitionAllOf, Symbol("schemaId"), schemaId)
        OpenAPI.validate_property(SchemaLinkFieldDefinitionAllOf, Symbol("type"), type)
        return new(schemaId, type, )
    end
end # type SchemaLinkFieldDefinitionAllOf

const _property_types_SchemaLinkFieldDefinitionAllOf = Dict{Symbol,String}(Symbol("schemaId")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ SchemaLinkFieldDefinitionAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SchemaLinkFieldDefinitionAllOf[name]))}

function check_required(o::SchemaLinkFieldDefinitionAllOf)
    true
end

function OpenAPI.validate_property(::Type{ SchemaLinkFieldDefinitionAllOf }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "SchemaLinkFieldDefinitionAllOf", :enum, val, ["entity_link", "entry_link", "part_link", "translation_link", "batch_link", "storage_link", "assay_request_link", "assay_result_link", "assay_run_link"])
    end
end
