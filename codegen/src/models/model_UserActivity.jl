# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UserActivity

    UserActivity(;
        lastSeen=nothing,
        userId=nothing,
    )

    - lastSeen::ZonedDateTime
    - userId::String
"""
Base.@kwdef mutable struct UserActivity <: OpenAPI.APIModel
    lastSeen::Union{Nothing, ZonedDateTime} = nothing
    userId::Union{Nothing, String} = nothing

    function UserActivity(lastSeen, userId, )
        OpenAPI.validate_property(UserActivity, Symbol("lastSeen"), lastSeen)
        OpenAPI.validate_property(UserActivity, Symbol("userId"), userId)
        return new(lastSeen, userId, )
    end
end # type UserActivity

const _property_types_UserActivity = Dict{Symbol,String}(Symbol("lastSeen")=>"ZonedDateTime", Symbol("userId")=>"String", )
OpenAPI.property_type(::Type{ UserActivity }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UserActivity[name]))}

function check_required(o::UserActivity)
    true
end

function OpenAPI.validate_property(::Type{ UserActivity }, name::Symbol, val)
    if name === Symbol("lastSeen")
        OpenAPI.validate_param(name, "UserActivity", :format, val, "date-time")
    end
end
