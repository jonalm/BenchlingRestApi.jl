# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AssayRunNotePart

    AssayRunNotePart(;
        indentation=0,
        type=nothing,
        assayRunId=nothing,
        assayRunSchemaId=nothing,
    )

    - indentation::Int64 : All notes have an indentation level - the default is 0 for no indent. For lists, indentation gives notes hierarchy - a bulleted list with children is modeled as one note part with indentation 1 followed by note parts with indentation 2, for example.
    - type::String
    - assayRunId::String
    - assayRunSchemaId::String
"""
Base.@kwdef mutable struct AssayRunNotePart <: OpenAPI.APIModel
    indentation::Union{Nothing, Int64} = 0
    type::Union{Nothing, String} = nothing
    assayRunId::Union{Nothing, String} = nothing
    assayRunSchemaId::Union{Nothing, String} = nothing

    function AssayRunNotePart(indentation, type, assayRunId, assayRunSchemaId, )
        OpenAPI.validate_property(AssayRunNotePart, Symbol("indentation"), indentation)
        OpenAPI.validate_property(AssayRunNotePart, Symbol("type"), type)
        OpenAPI.validate_property(AssayRunNotePart, Symbol("assayRunId"), assayRunId)
        OpenAPI.validate_property(AssayRunNotePart, Symbol("assayRunSchemaId"), assayRunSchemaId)
        return new(indentation, type, assayRunId, assayRunSchemaId, )
    end
end # type AssayRunNotePart

const _property_types_AssayRunNotePart = Dict{Symbol,String}(Symbol("indentation")=>"Int64", Symbol("type")=>"String", Symbol("assayRunId")=>"String", Symbol("assayRunSchemaId")=>"String", )
OpenAPI.property_type(::Type{ AssayRunNotePart }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AssayRunNotePart[name]))}

function check_required(o::AssayRunNotePart)
    true
end

function OpenAPI.validate_property(::Type{ AssayRunNotePart }, name::Symbol, val)
    if name === Symbol("indentation")
        OpenAPI.validate_param(name, "AssayRunNotePart", :minimum, val, 0, false)
    end
    if name === Symbol("type")
        OpenAPI.validate_param(name, "AssayRunNotePart", :enum, val, ["assay_run"])
    end
end
