# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DeprecatedContainerVolumeForInput
Desired volume for a container, well, or transfer. \&quot;volume\&quot; type keys are deprecated in API requests; use the more permissive \&quot;quantity\&quot; type key instead. 

    DeprecatedContainerVolumeForInput(;
        units=nothing,
        value=nothing,
    )

    - units::String
    - value::Float64
"""
Base.@kwdef mutable struct DeprecatedContainerVolumeForInput <: OpenAPI.APIModel
    units::Union{Nothing, String} = nothing
    value::Union{Nothing, Float64} = nothing

    function DeprecatedContainerVolumeForInput(units, value, )
        OpenAPI.validate_property(DeprecatedContainerVolumeForInput, Symbol("units"), units)
        OpenAPI.validate_property(DeprecatedContainerVolumeForInput, Symbol("value"), value)
        return new(units, value, )
    end
end # type DeprecatedContainerVolumeForInput

const _property_types_DeprecatedContainerVolumeForInput = Dict{Symbol,String}(Symbol("units")=>"String", Symbol("value")=>"Float64", )
OpenAPI.property_type(::Type{ DeprecatedContainerVolumeForInput }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DeprecatedContainerVolumeForInput[name]))}

function check_required(o::DeprecatedContainerVolumeForInput)
    true
end

function OpenAPI.validate_property(::Type{ DeprecatedContainerVolumeForInput }, name::Symbol, val)
    if name === Symbol("units")
        OpenAPI.validate_param(name, "DeprecatedContainerVolumeForInput", :enum, val, ["pL", "nL", "uL", "mL", "L", "null"])
    end
end
