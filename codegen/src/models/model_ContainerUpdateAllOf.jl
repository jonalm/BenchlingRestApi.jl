# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ContainerUpdate_allOf

    ContainerUpdateAllOf(;
        projectId=nothing,
        quantity=nothing,
        volume=nothing,
    )

    - projectId::String
    - quantity::ContainerQuantity
    - volume::DeprecatedContainerVolumeForInput
"""
Base.@kwdef mutable struct ContainerUpdateAllOf <: OpenAPI.APIModel
    projectId::Union{Nothing, String} = nothing
    quantity = nothing # spec type: Union{ Nothing, ContainerQuantity }
    volume = nothing # spec type: Union{ Nothing, DeprecatedContainerVolumeForInput }

    function ContainerUpdateAllOf(projectId, quantity, volume, )
        OpenAPI.validate_property(ContainerUpdateAllOf, Symbol("projectId"), projectId)
        OpenAPI.validate_property(ContainerUpdateAllOf, Symbol("quantity"), quantity)
        OpenAPI.validate_property(ContainerUpdateAllOf, Symbol("volume"), volume)
        return new(projectId, quantity, volume, )
    end
end # type ContainerUpdateAllOf

const _property_types_ContainerUpdateAllOf = Dict{Symbol,String}(Symbol("projectId")=>"String", Symbol("quantity")=>"ContainerQuantity", Symbol("volume")=>"DeprecatedContainerVolumeForInput", )
OpenAPI.property_type(::Type{ ContainerUpdateAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ContainerUpdateAllOf[name]))}

function check_required(o::ContainerUpdateAllOf)
    true
end

function OpenAPI.validate_property(::Type{ ContainerUpdateAllOf }, name::Symbol, val)
end
