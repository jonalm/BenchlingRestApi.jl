# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WorkflowOutputsArchive

    WorkflowOutputsArchive(;
        reason=nothing,
        workflowOutputIds=nothing,
    )

    - reason::WorkflowOutputArchiveReason
    - workflowOutputIds::Vector{String}
"""
Base.@kwdef mutable struct WorkflowOutputsArchive <: OpenAPI.APIModel
    reason = nothing # spec type: Union{ Nothing, WorkflowOutputArchiveReason }
    workflowOutputIds::Union{Nothing, Vector{String}} = nothing

    function WorkflowOutputsArchive(reason, workflowOutputIds, )
        OpenAPI.validate_property(WorkflowOutputsArchive, Symbol("reason"), reason)
        OpenAPI.validate_property(WorkflowOutputsArchive, Symbol("workflowOutputIds"), workflowOutputIds)
        return new(reason, workflowOutputIds, )
    end
end # type WorkflowOutputsArchive

const _property_types_WorkflowOutputsArchive = Dict{Symbol,String}(Symbol("reason")=>"WorkflowOutputArchiveReason", Symbol("workflowOutputIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ WorkflowOutputsArchive }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WorkflowOutputsArchive[name]))}

function check_required(o::WorkflowOutputsArchive)
    o.reason === nothing && (return false)
    o.workflowOutputIds === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ WorkflowOutputsArchive }, name::Symbol, val)
end
