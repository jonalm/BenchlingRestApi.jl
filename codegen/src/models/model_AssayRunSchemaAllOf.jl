# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AssayRunSchema_allOf

    AssayRunSchemaAllOf(;
        automationInputFileConfigs=nothing,
        automationOutputFileConfigs=nothing,
        modifiedAt=nothing,
        type=nothing,
    )

    - automationInputFileConfigs::Vector{AssayRunSchemaAllOfAutomationInputFileConfigs}
    - automationOutputFileConfigs::Vector{AssayRunSchemaAllOfAutomationInputFileConfigs}
    - modifiedAt::ZonedDateTime : DateTime the Assay Run Schema was last modified
    - type::String
"""
Base.@kwdef mutable struct AssayRunSchemaAllOf <: OpenAPI.APIModel
    automationInputFileConfigs::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{AssayRunSchemaAllOfAutomationInputFileConfigs} }
    automationOutputFileConfigs::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{AssayRunSchemaAllOfAutomationInputFileConfigs} }
    modifiedAt::Union{Nothing, ZonedDateTime} = nothing
    type::Union{Nothing, String} = nothing

    function AssayRunSchemaAllOf(automationInputFileConfigs, automationOutputFileConfigs, modifiedAt, type, )
        OpenAPI.validate_property(AssayRunSchemaAllOf, Symbol("automationInputFileConfigs"), automationInputFileConfigs)
        OpenAPI.validate_property(AssayRunSchemaAllOf, Symbol("automationOutputFileConfigs"), automationOutputFileConfigs)
        OpenAPI.validate_property(AssayRunSchemaAllOf, Symbol("modifiedAt"), modifiedAt)
        OpenAPI.validate_property(AssayRunSchemaAllOf, Symbol("type"), type)
        return new(automationInputFileConfigs, automationOutputFileConfigs, modifiedAt, type, )
    end
end # type AssayRunSchemaAllOf

const _property_types_AssayRunSchemaAllOf = Dict{Symbol,String}(Symbol("automationInputFileConfigs")=>"Vector{AssayRunSchemaAllOfAutomationInputFileConfigs}", Symbol("automationOutputFileConfigs")=>"Vector{AssayRunSchemaAllOfAutomationInputFileConfigs}", Symbol("modifiedAt")=>"ZonedDateTime", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ AssayRunSchemaAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AssayRunSchemaAllOf[name]))}

function check_required(o::AssayRunSchemaAllOf)
    true
end

function OpenAPI.validate_property(::Type{ AssayRunSchemaAllOf }, name::Symbol, val)
    if name === Symbol("modifiedAt")
        OpenAPI.validate_param(name, "AssayRunSchemaAllOf", :format, val, "date-time")
    end
    if name === Symbol("type")
        OpenAPI.validate_param(name, "AssayRunSchemaAllOf", :enum, val, ["assay_run"])
    end
end
