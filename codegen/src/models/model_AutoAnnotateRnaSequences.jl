# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AutoAnnotateRnaSequences

    AutoAnnotateRnaSequences(;
        featureLibraryIds=nothing,
        rnaSequenceIds=nothing,
    )

    - featureLibraryIds::Vector{String} : Array of feature library IDs.
    - rnaSequenceIds::Vector{String} : Array of RNA sequence IDs.
"""
Base.@kwdef mutable struct AutoAnnotateRnaSequences <: OpenAPI.APIModel
    featureLibraryIds::Union{Nothing, Vector{String}} = nothing
    rnaSequenceIds::Union{Nothing, Vector{String}} = nothing

    function AutoAnnotateRnaSequences(featureLibraryIds, rnaSequenceIds, )
        OpenAPI.validate_property(AutoAnnotateRnaSequences, Symbol("featureLibraryIds"), featureLibraryIds)
        OpenAPI.validate_property(AutoAnnotateRnaSequences, Symbol("rnaSequenceIds"), rnaSequenceIds)
        return new(featureLibraryIds, rnaSequenceIds, )
    end
end # type AutoAnnotateRnaSequences

const _property_types_AutoAnnotateRnaSequences = Dict{Symbol,String}(Symbol("featureLibraryIds")=>"Vector{String}", Symbol("rnaSequenceIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ AutoAnnotateRnaSequences }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AutoAnnotateRnaSequences[name]))}

function check_required(o::AutoAnnotateRnaSequences)
    o.featureLibraryIds === nothing && (return false)
    o.rnaSequenceIds === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AutoAnnotateRnaSequences }, name::Symbol, val)
    if name === Symbol("rnaSequenceIds")
        OpenAPI.validate_param(name, "AutoAnnotateRnaSequences", :maxItems, val, 1000)
    end
end
