# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AutomationFile

    AutomationFile(;
        assayRunId=nothing,
        automationFileConfig=nothing,
        file=nothing,
        id=nothing,
        status=nothing,
    )

    - assayRunId::String
    - automationFileConfig::AutomationFileAutomationFileConfig
    - file::Blob
    - id::String
    - status::String
"""
Base.@kwdef mutable struct AutomationFile <: OpenAPI.APIModel
    assayRunId::Union{Nothing, String} = nothing
    automationFileConfig = nothing # spec type: Union{ Nothing, AutomationFileAutomationFileConfig }
    file = nothing # spec type: Union{ Nothing, Blob }
    id::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing

    function AutomationFile(assayRunId, automationFileConfig, file, id, status, )
        OpenAPI.validate_property(AutomationFile, Symbol("assayRunId"), assayRunId)
        OpenAPI.validate_property(AutomationFile, Symbol("automationFileConfig"), automationFileConfig)
        OpenAPI.validate_property(AutomationFile, Symbol("file"), file)
        OpenAPI.validate_property(AutomationFile, Symbol("id"), id)
        OpenAPI.validate_property(AutomationFile, Symbol("status"), status)
        return new(assayRunId, automationFileConfig, file, id, status, )
    end
end # type AutomationFile

const _property_types_AutomationFile = Dict{Symbol,String}(Symbol("assayRunId")=>"String", Symbol("automationFileConfig")=>"AutomationFileAutomationFileConfig", Symbol("file")=>"Blob", Symbol("id")=>"String", Symbol("status")=>"String", )
OpenAPI.property_type(::Type{ AutomationFile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AutomationFile[name]))}

function check_required(o::AutomationFile)
    true
end

function OpenAPI.validate_property(::Type{ AutomationFile }, name::Symbol, val)
    if name === Symbol("status")
        OpenAPI.validate_param(name, "AutomationFile", :enum, val, ["SUCCEEDED", "FAILED", "NOT_STARTED", "RUNNING"])
    end
end
