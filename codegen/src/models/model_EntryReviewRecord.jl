# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Entry_reviewRecord
Review record if set

    EntryReviewRecord(;
        comment=nothing,
        status=nothing,
    )

    - comment::String : Reviewer&#39;s Comments
    - status::String : Review Status of the entry
"""
Base.@kwdef mutable struct EntryReviewRecord <: OpenAPI.APIModel
    comment::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing

    function EntryReviewRecord(comment, status, )
        OpenAPI.validate_property(EntryReviewRecord, Symbol("comment"), comment)
        OpenAPI.validate_property(EntryReviewRecord, Symbol("status"), status)
        return new(comment, status, )
    end
end # type EntryReviewRecord

const _property_types_EntryReviewRecord = Dict{Symbol,String}(Symbol("comment")=>"String", Symbol("status")=>"String", )
OpenAPI.property_type(::Type{ EntryReviewRecord }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EntryReviewRecord[name]))}

function check_required(o::EntryReviewRecord)
    true
end

function OpenAPI.validate_property(::Type{ EntryReviewRecord }, name::Symbol, val)
    if name === Symbol("status")
        OpenAPI.validate_param(name, "EntryReviewRecord", :enum, val, ["ACCEPTED", "NEEDS_REVIEW", "REJECTED", "RETRACTED", "ACCEPTANCE_SNAPSHOT_IN_PROGRESS", "REVIEW_SNAPSHOT_IN_PROGRESS", "IN_PROGRESS", "ACTION_REQUIRED"])
    end
end
