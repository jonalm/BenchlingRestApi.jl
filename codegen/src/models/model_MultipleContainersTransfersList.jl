# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MultipleContainersTransfersList

    MultipleContainersTransfersList(;
        transfers=nothing,
    )

    - transfers::Vector{MultipleContainersTransfer}
"""
Base.@kwdef mutable struct MultipleContainersTransfersList <: OpenAPI.APIModel
    transfers::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{MultipleContainersTransfer} }

    function MultipleContainersTransfersList(transfers, )
        OpenAPI.validate_property(MultipleContainersTransfersList, Symbol("transfers"), transfers)
        return new(transfers, )
    end
end # type MultipleContainersTransfersList

const _property_types_MultipleContainersTransfersList = Dict{Symbol,String}(Symbol("transfers")=>"Vector{MultipleContainersTransfer}", )
OpenAPI.property_type(::Type{ MultipleContainersTransfersList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MultipleContainersTransfersList[name]))}

function check_required(o::MultipleContainersTransfersList)
    o.transfers === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MultipleContainersTransfersList }, name::Symbol, val)
    if name === Symbol("transfers")
        OpenAPI.validate_param(name, "MultipleContainersTransfersList", :maxItems, val, 5000)
    end
end
