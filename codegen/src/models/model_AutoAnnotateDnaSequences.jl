# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AutoAnnotateDnaSequences

    AutoAnnotateDnaSequences(;
        dnaSequenceIds=nothing,
        featureLibraryIds=nothing,
    )

    - dnaSequenceIds::Vector{String} : Array of DNA sequence IDs.
    - featureLibraryIds::Vector{String} : Array of feature library IDs.
"""
Base.@kwdef mutable struct AutoAnnotateDnaSequences <: OpenAPI.APIModel
    dnaSequenceIds::Union{Nothing, Vector{String}} = nothing
    featureLibraryIds::Union{Nothing, Vector{String}} = nothing

    function AutoAnnotateDnaSequences(dnaSequenceIds, featureLibraryIds, )
        OpenAPI.validate_property(AutoAnnotateDnaSequences, Symbol("dnaSequenceIds"), dnaSequenceIds)
        OpenAPI.validate_property(AutoAnnotateDnaSequences, Symbol("featureLibraryIds"), featureLibraryIds)
        return new(dnaSequenceIds, featureLibraryIds, )
    end
end # type AutoAnnotateDnaSequences

const _property_types_AutoAnnotateDnaSequences = Dict{Symbol,String}(Symbol("dnaSequenceIds")=>"Vector{String}", Symbol("featureLibraryIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ AutoAnnotateDnaSequences }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AutoAnnotateDnaSequences[name]))}

function check_required(o::AutoAnnotateDnaSequences)
    o.dnaSequenceIds === nothing && (return false)
    o.featureLibraryIds === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AutoAnnotateDnaSequences }, name::Symbol, val)
end
