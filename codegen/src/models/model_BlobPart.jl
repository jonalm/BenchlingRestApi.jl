# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BlobPart

    BlobPart(;
        eTag=nothing,
        partNumber=nothing,
    )

    - eTag::String
    - partNumber::Int64
"""
Base.@kwdef mutable struct BlobPart <: OpenAPI.APIModel
    eTag::Union{Nothing, String} = nothing
    partNumber::Union{Nothing, Int64} = nothing

    function BlobPart(eTag, partNumber, )
        OpenAPI.validate_property(BlobPart, Symbol("eTag"), eTag)
        OpenAPI.validate_property(BlobPart, Symbol("partNumber"), partNumber)
        return new(eTag, partNumber, )
    end
end # type BlobPart

const _property_types_BlobPart = Dict{Symbol,String}(Symbol("eTag")=>"String", Symbol("partNumber")=>"Int64", )
OpenAPI.property_type(::Type{ BlobPart }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BlobPart[name]))}

function check_required(o::BlobPart)
    true
end

function OpenAPI.validate_property(::Type{ BlobPart }, name::Symbol, val)
    if name === Symbol("partNumber")
        OpenAPI.validate_param(name, "BlobPart", :maximum, val, 10000, false)
        OpenAPI.validate_param(name, "BlobPart", :minimum, val, 1, false)
    end
end
