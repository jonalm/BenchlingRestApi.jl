# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SequenceFeatureBase

    SequenceFeatureBase(;
        color=nothing,
        customFields=nothing,
        name=nothing,
        notes=nothing,
    )

    - color::String : Hex color code used when displaying this feature in the UI.
    - customFields::Vector{SequenceFeatureCustomField}
    - name::String
    - notes::String
"""
Base.@kwdef mutable struct SequenceFeatureBase <: OpenAPI.APIModel
    color::Union{Nothing, String} = nothing
    customFields::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SequenceFeatureCustomField} }
    name::Union{Nothing, String} = nothing
    notes::Union{Nothing, String} = nothing

    function SequenceFeatureBase(color, customFields, name, notes, )
        OpenAPI.validate_property(SequenceFeatureBase, Symbol("color"), color)
        OpenAPI.validate_property(SequenceFeatureBase, Symbol("customFields"), customFields)
        OpenAPI.validate_property(SequenceFeatureBase, Symbol("name"), name)
        OpenAPI.validate_property(SequenceFeatureBase, Symbol("notes"), notes)
        return new(color, customFields, name, notes, )
    end
end # type SequenceFeatureBase

const _property_types_SequenceFeatureBase = Dict{Symbol,String}(Symbol("color")=>"String", Symbol("customFields")=>"Vector{SequenceFeatureCustomField}", Symbol("name")=>"String", Symbol("notes")=>"String", )
OpenAPI.property_type(::Type{ SequenceFeatureBase }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SequenceFeatureBase[name]))}

function check_required(o::SequenceFeatureBase)
    true
end

function OpenAPI.validate_property(::Type{ SequenceFeatureBase }, name::Symbol, val)
    if name === Symbol("customFields")
        OpenAPI.validate_param(name, "SequenceFeatureBase", :maxItems, val, 100)
    end
    if name === Symbol("name")
        OpenAPI.validate_param(name, "SequenceFeatureBase", :maxLength, val, 2048)
    end
    if name === Symbol("notes")
        OpenAPI.validate_param(name, "SequenceFeatureBase", :maxLength, val, 10000)
    end
end
