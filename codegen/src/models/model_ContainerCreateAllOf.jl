# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ContainerCreate_allOf

    ContainerCreateAllOf(;
        barcode=nothing,
        projectId=nothing,
        schemaId=nothing,
    )

    - barcode::String
    - projectId::String
    - schemaId::String
"""
Base.@kwdef mutable struct ContainerCreateAllOf <: OpenAPI.APIModel
    barcode::Union{Nothing, String} = nothing
    projectId::Union{Nothing, String} = nothing
    schemaId::Union{Nothing, String} = nothing

    function ContainerCreateAllOf(barcode, projectId, schemaId, )
        OpenAPI.validate_property(ContainerCreateAllOf, Symbol("barcode"), barcode)
        OpenAPI.validate_property(ContainerCreateAllOf, Symbol("projectId"), projectId)
        OpenAPI.validate_property(ContainerCreateAllOf, Symbol("schemaId"), schemaId)
        return new(barcode, projectId, schemaId, )
    end
end # type ContainerCreateAllOf

const _property_types_ContainerCreateAllOf = Dict{Symbol,String}(Symbol("barcode")=>"String", Symbol("projectId")=>"String", Symbol("schemaId")=>"String", )
OpenAPI.property_type(::Type{ ContainerCreateAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ContainerCreateAllOf[name]))}

function check_required(o::ContainerCreateAllOf)
    o.schemaId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ContainerCreateAllOf }, name::Symbol, val)
end
