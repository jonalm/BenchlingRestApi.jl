# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RequestTaskSchemasPaginatedList

    RequestTaskSchemasPaginatedList(;
        nextToken=nothing,
        requestTaskSchemas=nothing,
    )

    - nextToken::String
    - requestTaskSchemas::Vector{RequestTaskSchema}
"""
Base.@kwdef mutable struct RequestTaskSchemasPaginatedList <: OpenAPI.APIModel
    nextToken::Union{Nothing, String} = nothing
    requestTaskSchemas::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{RequestTaskSchema} }

    function RequestTaskSchemasPaginatedList(nextToken, requestTaskSchemas, )
        OpenAPI.validate_property(RequestTaskSchemasPaginatedList, Symbol("nextToken"), nextToken)
        OpenAPI.validate_property(RequestTaskSchemasPaginatedList, Symbol("requestTaskSchemas"), requestTaskSchemas)
        return new(nextToken, requestTaskSchemas, )
    end
end # type RequestTaskSchemasPaginatedList

const _property_types_RequestTaskSchemasPaginatedList = Dict{Symbol,String}(Symbol("nextToken")=>"String", Symbol("requestTaskSchemas")=>"Vector{RequestTaskSchema}", )
OpenAPI.property_type(::Type{ RequestTaskSchemasPaginatedList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RequestTaskSchemasPaginatedList[name]))}

function check_required(o::RequestTaskSchemasPaginatedList)
    true
end

function OpenAPI.validate_property(::Type{ RequestTaskSchemasPaginatedList }, name::Symbol, val)
end
