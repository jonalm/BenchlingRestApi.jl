# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MixturesArchive
The request body for archiving mixtures. 

    MixturesArchive(;
        mixtureIds=nothing,
        reason=nothing,
    )

    - mixtureIds::Vector{String}
    - reason::EntityArchiveReason
"""
Base.@kwdef mutable struct MixturesArchive <: OpenAPI.APIModel
    mixtureIds::Union{Nothing, Vector{String}} = nothing
    reason = nothing # spec type: Union{ Nothing, EntityArchiveReason }

    function MixturesArchive(mixtureIds, reason, )
        OpenAPI.validate_property(MixturesArchive, Symbol("mixtureIds"), mixtureIds)
        OpenAPI.validate_property(MixturesArchive, Symbol("reason"), reason)
        return new(mixtureIds, reason, )
    end
end # type MixturesArchive

const _property_types_MixturesArchive = Dict{Symbol,String}(Symbol("mixtureIds")=>"Vector{String}", Symbol("reason")=>"EntityArchiveReason", )
OpenAPI.property_type(::Type{ MixturesArchive }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MixturesArchive[name]))}

function check_required(o::MixturesArchive)
    o.mixtureIds === nothing && (return false)
    o.reason === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MixturesArchive }, name::Symbol, val)
end
