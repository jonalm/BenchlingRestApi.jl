# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ContainerTransfer_allOf_destinationVolume
Deprecated - use destinationQuantity instead. 

    ContainerTransferAllOfDestinationVolume(;
        units=nothing,
        value=nothing,
    )

    - units::String
    - value::Float64
"""
Base.@kwdef mutable struct ContainerTransferAllOfDestinationVolume <: OpenAPI.APIModel
    units::Union{Nothing, String} = nothing
    value::Union{Nothing, Float64} = nothing

    function ContainerTransferAllOfDestinationVolume(units, value, )
        OpenAPI.validate_property(ContainerTransferAllOfDestinationVolume, Symbol("units"), units)
        OpenAPI.validate_property(ContainerTransferAllOfDestinationVolume, Symbol("value"), value)
        return new(units, value, )
    end
end # type ContainerTransferAllOfDestinationVolume

const _property_types_ContainerTransferAllOfDestinationVolume = Dict{Symbol,String}(Symbol("units")=>"String", Symbol("value")=>"Float64", )
OpenAPI.property_type(::Type{ ContainerTransferAllOfDestinationVolume }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ContainerTransferAllOfDestinationVolume[name]))}

function check_required(o::ContainerTransferAllOfDestinationVolume)
    true
end

function OpenAPI.validate_property(::Type{ ContainerTransferAllOfDestinationVolume }, name::Symbol, val)
    if name === Symbol("units")
        OpenAPI.validate_param(name, "ContainerTransferAllOfDestinationVolume", :enum, val, ["pL", "nL", "uL", "mL", "L", "null"])
    end
end
