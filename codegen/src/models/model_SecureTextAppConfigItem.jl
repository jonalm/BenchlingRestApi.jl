# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SecureTextAppConfigItem

    SecureTextAppConfigItem(;
        apiURL=nothing,
        app=nothing,
        createdAt=nothing,
        id=nothing,
        modifiedAt=nothing,
        path=nothing,
        type=nothing,
        description=nothing,
        requiredConfig=nothing,
        value=nothing,
    )

    - apiURL::String
    - app::AppConfigItemApiMixinApp
    - createdAt::ZonedDateTime : DateTime the app config item was created
    - id::String
    - modifiedAt::ZonedDateTime : DateTime the app config item was last modified
    - path::Vector{String} : Array-based representation of config item&#39;s location in the tree in order from top to bottom.
    - type::String
    - description::String
    - requiredConfig::Bool
    - value::String
"""
Base.@kwdef mutable struct SecureTextAppConfigItem <: OpenAPI.APIModel
    apiURL::Union{Nothing, String} = nothing
    app = nothing # spec type: Union{ Nothing, AppConfigItemApiMixinApp }
    createdAt::Union{Nothing, ZonedDateTime} = nothing
    id::Union{Nothing, String} = nothing
    modifiedAt::Union{Nothing, ZonedDateTime} = nothing
    path::Union{Nothing, Vector{String}} = nothing
    type::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    requiredConfig::Union{Nothing, Bool} = nothing
    value::Union{Nothing, String} = nothing

    function SecureTextAppConfigItem(apiURL, app, createdAt, id, modifiedAt, path, type, description, requiredConfig, value, )
        OpenAPI.validate_property(SecureTextAppConfigItem, Symbol("apiURL"), apiURL)
        OpenAPI.validate_property(SecureTextAppConfigItem, Symbol("app"), app)
        OpenAPI.validate_property(SecureTextAppConfigItem, Symbol("createdAt"), createdAt)
        OpenAPI.validate_property(SecureTextAppConfigItem, Symbol("id"), id)
        OpenAPI.validate_property(SecureTextAppConfigItem, Symbol("modifiedAt"), modifiedAt)
        OpenAPI.validate_property(SecureTextAppConfigItem, Symbol("path"), path)
        OpenAPI.validate_property(SecureTextAppConfigItem, Symbol("type"), type)
        OpenAPI.validate_property(SecureTextAppConfigItem, Symbol("description"), description)
        OpenAPI.validate_property(SecureTextAppConfigItem, Symbol("requiredConfig"), requiredConfig)
        OpenAPI.validate_property(SecureTextAppConfigItem, Symbol("value"), value)
        return new(apiURL, app, createdAt, id, modifiedAt, path, type, description, requiredConfig, value, )
    end
end # type SecureTextAppConfigItem

const _property_types_SecureTextAppConfigItem = Dict{Symbol,String}(Symbol("apiURL")=>"String", Symbol("app")=>"AppConfigItemApiMixinApp", Symbol("createdAt")=>"ZonedDateTime", Symbol("id")=>"String", Symbol("modifiedAt")=>"ZonedDateTime", Symbol("path")=>"Vector{String}", Symbol("type")=>"String", Symbol("description")=>"String", Symbol("requiredConfig")=>"Bool", Symbol("value")=>"String", )
OpenAPI.property_type(::Type{ SecureTextAppConfigItem }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SecureTextAppConfigItem[name]))}

function check_required(o::SecureTextAppConfigItem)
    true
end

function OpenAPI.validate_property(::Type{ SecureTextAppConfigItem }, name::Symbol, val)
    if name === Symbol("apiURL")
        OpenAPI.validate_param(name, "SecureTextAppConfigItem", :format, val, "uri")
    end
    if name === Symbol("createdAt")
        OpenAPI.validate_param(name, "SecureTextAppConfigItem", :format, val, "date-time")
    end
    if name === Symbol("modifiedAt")
        OpenAPI.validate_param(name, "SecureTextAppConfigItem", :format, val, "date-time")
    end
    if name === Symbol("type")
        OpenAPI.validate_param(name, "SecureTextAppConfigItem", :enum, val, ["secure_text"])
    end
end
