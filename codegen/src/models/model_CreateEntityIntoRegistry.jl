# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreateEntityIntoRegistry

    CreateEntityIntoRegistry(;
        entityRegistryId=nothing,
        folderId=nothing,
        namingStrategy=nothing,
        registryId=nothing,
    )

    - entityRegistryId::String : Entity registry ID to set for the registered entity. Cannot specify both entityRegistryId and namingStrategy at the same time. 
    - folderId::String : ID of the folder containing the entity. Can be left empty when registryId is present.
    - namingStrategy::NamingStrategy
    - registryId::String : Registry ID into which entity should be registered. this is the ID of the registry which was configured for a particular organization To get available registryIds, use the [/registries endpoint](#/Registry/listRegistries)  Required in order for entities to be created directly in the registry. 
"""
Base.@kwdef mutable struct CreateEntityIntoRegistry <: OpenAPI.APIModel
    entityRegistryId::Union{Nothing, String} = nothing
    folderId::Union{Nothing, String} = nothing
    namingStrategy = nothing # spec type: Union{ Nothing, NamingStrategy }
    registryId::Union{Nothing, String} = nothing

    function CreateEntityIntoRegistry(entityRegistryId, folderId, namingStrategy, registryId, )
        OpenAPI.validate_property(CreateEntityIntoRegistry, Symbol("entityRegistryId"), entityRegistryId)
        OpenAPI.validate_property(CreateEntityIntoRegistry, Symbol("folderId"), folderId)
        OpenAPI.validate_property(CreateEntityIntoRegistry, Symbol("namingStrategy"), namingStrategy)
        OpenAPI.validate_property(CreateEntityIntoRegistry, Symbol("registryId"), registryId)
        return new(entityRegistryId, folderId, namingStrategy, registryId, )
    end
end # type CreateEntityIntoRegistry

const _property_types_CreateEntityIntoRegistry = Dict{Symbol,String}(Symbol("entityRegistryId")=>"String", Symbol("folderId")=>"String", Symbol("namingStrategy")=>"NamingStrategy", Symbol("registryId")=>"String", )
OpenAPI.property_type(::Type{ CreateEntityIntoRegistry }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreateEntityIntoRegistry[name]))}

function check_required(o::CreateEntityIntoRegistry)
    true
end

function OpenAPI.validate_property(::Type{ CreateEntityIntoRegistry }, name::Symbol, val)
end
