# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AssayRunsArchive
The request body for archiving Assay Runs. 

    AssayRunsArchive(;
        assayRunIds=nothing,
        reason=nothing,
    )

    - assayRunIds::Vector{String}
    - reason::String : The reason for archiving the provided Assay Runs. Accepted reasons may differ based on tenant configuration. 
"""
Base.@kwdef mutable struct AssayRunsArchive <: OpenAPI.APIModel
    assayRunIds::Union{Nothing, Vector{String}} = nothing
    reason::Union{Nothing, String} = nothing

    function AssayRunsArchive(assayRunIds, reason, )
        OpenAPI.validate_property(AssayRunsArchive, Symbol("assayRunIds"), assayRunIds)
        OpenAPI.validate_property(AssayRunsArchive, Symbol("reason"), reason)
        return new(assayRunIds, reason, )
    end
end # type AssayRunsArchive

const _property_types_AssayRunsArchive = Dict{Symbol,String}(Symbol("assayRunIds")=>"Vector{String}", Symbol("reason")=>"String", )
OpenAPI.property_type(::Type{ AssayRunsArchive }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AssayRunsArchive[name]))}

function check_required(o::AssayRunsArchive)
    o.assayRunIds === nothing && (return false)
    o.reason === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ AssayRunsArchive }, name::Symbol, val)
    if name === Symbol("reason")
        OpenAPI.validate_param(name, "AssayRunsArchive", :enum, val, ["Archived", "Made in error", "Other"])
    end
end
