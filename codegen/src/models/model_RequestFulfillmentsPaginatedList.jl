# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RequestFulfillmentsPaginatedList
An object containing an array of RequestFulfillments

    RequestFulfillmentsPaginatedList(;
        nextToken=nothing,
        requestFulfillments=nothing,
    )

    - nextToken::String
    - requestFulfillments::Vector{RequestFulfillment}
"""
Base.@kwdef mutable struct RequestFulfillmentsPaginatedList <: OpenAPI.APIModel
    nextToken::Union{Nothing, String} = nothing
    requestFulfillments::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{RequestFulfillment} }

    function RequestFulfillmentsPaginatedList(nextToken, requestFulfillments, )
        OpenAPI.validate_property(RequestFulfillmentsPaginatedList, Symbol("nextToken"), nextToken)
        OpenAPI.validate_property(RequestFulfillmentsPaginatedList, Symbol("requestFulfillments"), requestFulfillments)
        return new(nextToken, requestFulfillments, )
    end
end # type RequestFulfillmentsPaginatedList

const _property_types_RequestFulfillmentsPaginatedList = Dict{Symbol,String}(Symbol("nextToken")=>"String", Symbol("requestFulfillments")=>"Vector{RequestFulfillment}", )
OpenAPI.property_type(::Type{ RequestFulfillmentsPaginatedList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RequestFulfillmentsPaginatedList[name]))}

function check_required(o::RequestFulfillmentsPaginatedList)
    true
end

function OpenAPI.validate_property(::Type{ RequestFulfillmentsPaginatedList }, name::Symbol, val)
end
