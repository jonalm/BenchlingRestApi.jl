# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EntitySchema_allOf_constraint

    EntitySchemaAllOfConstraint(;
        fieldDefinitionNames=nothing,
        hasUniqueResidues=nothing,
    )

    - fieldDefinitionNames::Vector{String}
    - hasUniqueResidues::Bool
"""
Base.@kwdef mutable struct EntitySchemaAllOfConstraint <: OpenAPI.APIModel
    fieldDefinitionNames::Union{Nothing, Vector{String}} = nothing
    hasUniqueResidues::Union{Nothing, Bool} = nothing

    function EntitySchemaAllOfConstraint(fieldDefinitionNames, hasUniqueResidues, )
        OpenAPI.validate_property(EntitySchemaAllOfConstraint, Symbol("fieldDefinitionNames"), fieldDefinitionNames)
        OpenAPI.validate_property(EntitySchemaAllOfConstraint, Symbol("hasUniqueResidues"), hasUniqueResidues)
        return new(fieldDefinitionNames, hasUniqueResidues, )
    end
end # type EntitySchemaAllOfConstraint

const _property_types_EntitySchemaAllOfConstraint = Dict{Symbol,String}(Symbol("fieldDefinitionNames")=>"Vector{String}", Symbol("hasUniqueResidues")=>"Bool", )
OpenAPI.property_type(::Type{ EntitySchemaAllOfConstraint }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EntitySchemaAllOfConstraint[name]))}

function check_required(o::EntitySchemaAllOfConstraint)
    true
end

function OpenAPI.validate_property(::Type{ EntitySchemaAllOfConstraint }, name::Symbol, val)
end
