# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BatchesArchive
The request body for archiving Batches. 

    BatchesArchive(;
        batchIds=nothing,
        reason=nothing,
    )

    - batchIds::Vector{String}
    - reason::String : The reason for archiving the provided Batches. Accepted reasons may differ based on tenant configuration. 
"""
Base.@kwdef mutable struct BatchesArchive <: OpenAPI.APIModel
    batchIds::Union{Nothing, Vector{String}} = nothing
    reason::Union{Nothing, String} = nothing

    function BatchesArchive(batchIds, reason, )
        OpenAPI.validate_property(BatchesArchive, Symbol("batchIds"), batchIds)
        OpenAPI.validate_property(BatchesArchive, Symbol("reason"), reason)
        return new(batchIds, reason, )
    end
end # type BatchesArchive

const _property_types_BatchesArchive = Dict{Symbol,String}(Symbol("batchIds")=>"Vector{String}", Symbol("reason")=>"String", )
OpenAPI.property_type(::Type{ BatchesArchive }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BatchesArchive[name]))}

function check_required(o::BatchesArchive)
    o.batchIds === nothing && (return false)
    o.reason === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ BatchesArchive }, name::Symbol, val)
    if name === Symbol("reason")
        OpenAPI.validate_param(name, "BatchesArchive", :enum, val, ["Made in error", "Retired", "Expended", "Shipped", "Contaminated", "Expired", "Missing", "Other"])
    end
end
