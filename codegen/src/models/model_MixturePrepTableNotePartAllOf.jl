# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MixturePrepTableNotePart_allOf

    MixturePrepTableNotePartAllOf(;
        mixtureSchemaId=nothing,
        type=nothing,
    )

    - mixtureSchemaId::String
    - type::String
"""
Base.@kwdef mutable struct MixturePrepTableNotePartAllOf <: OpenAPI.APIModel
    mixtureSchemaId::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing

    function MixturePrepTableNotePartAllOf(mixtureSchemaId, type, )
        OpenAPI.validate_property(MixturePrepTableNotePartAllOf, Symbol("mixtureSchemaId"), mixtureSchemaId)
        OpenAPI.validate_property(MixturePrepTableNotePartAllOf, Symbol("type"), type)
        return new(mixtureSchemaId, type, )
    end
end # type MixturePrepTableNotePartAllOf

const _property_types_MixturePrepTableNotePartAllOf = Dict{Symbol,String}(Symbol("mixtureSchemaId")=>"String", Symbol("type")=>"String", )
OpenAPI.property_type(::Type{ MixturePrepTableNotePartAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MixturePrepTableNotePartAllOf[name]))}

function check_required(o::MixturePrepTableNotePartAllOf)
    true
end

function OpenAPI.validate_property(::Type{ MixturePrepTableNotePartAllOf }, name::Symbol, val)
    if name === Symbol("type")
        OpenAPI.validate_param(name, "MixturePrepTableNotePartAllOf", :enum, val, ["mixture_prep_table"])
    end
end
