# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CheckoutRecord
 *assignee field* is set if status is \&quot;RESERVED\&quot; or \&quot;CHECKED_OUT\&quot;, or null if status is \&quot;AVAILABLE\&quot;.  *comment field* is set when container was last reserved, checked out, or checked into.  *modifiedAt field* is the date and time when container was last checked out, checked in, or reserved 

    CheckoutRecord(;
        assignee=nothing,
        comment=nothing,
        modifiedAt=nothing,
        status=nothing,
    )

    - assignee::CheckoutRecordAssignee
    - comment::String
    - modifiedAt::ZonedDateTime
    - status::String
"""
Base.@kwdef mutable struct CheckoutRecord <: OpenAPI.APIModel
    assignee = nothing # spec type: Union{ Nothing, CheckoutRecordAssignee }
    comment::Union{Nothing, String} = nothing
    modifiedAt::Union{Nothing, ZonedDateTime} = nothing
    status::Union{Nothing, String} = nothing

    function CheckoutRecord(assignee, comment, modifiedAt, status, )
        OpenAPI.validate_property(CheckoutRecord, Symbol("assignee"), assignee)
        OpenAPI.validate_property(CheckoutRecord, Symbol("comment"), comment)
        OpenAPI.validate_property(CheckoutRecord, Symbol("modifiedAt"), modifiedAt)
        OpenAPI.validate_property(CheckoutRecord, Symbol("status"), status)
        return new(assignee, comment, modifiedAt, status, )
    end
end # type CheckoutRecord

const _property_types_CheckoutRecord = Dict{Symbol,String}(Symbol("assignee")=>"CheckoutRecordAssignee", Symbol("comment")=>"String", Symbol("modifiedAt")=>"ZonedDateTime", Symbol("status")=>"String", )
OpenAPI.property_type(::Type{ CheckoutRecord }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CheckoutRecord[name]))}

function check_required(o::CheckoutRecord)
    true
end

function OpenAPI.validate_property(::Type{ CheckoutRecord }, name::Symbol, val)
    if name === Symbol("modifiedAt")
        OpenAPI.validate_param(name, "CheckoutRecord", :format, val, "date-time")
    end
    if name === Symbol("status")
        OpenAPI.validate_param(name, "CheckoutRecord", :enum, val, ["AVAILABLE", "RESERVED", "CHECKED_OUT"])
    end
end
