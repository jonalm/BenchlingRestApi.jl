# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""BadRequestErrorBulk_allOf_error_errors

    BadRequestErrorBulkAllOfErrorErrors(;
        index=nothing,
        message=nothing,
    )

    - index::Float64
    - message::String
"""
Base.@kwdef mutable struct BadRequestErrorBulkAllOfErrorErrors <: OpenAPI.APIModel
    index::Union{Nothing, Float64} = nothing
    message::Union{Nothing, String} = nothing

    function BadRequestErrorBulkAllOfErrorErrors(index, message, )
        OpenAPI.validate_property(BadRequestErrorBulkAllOfErrorErrors, Symbol("index"), index)
        OpenAPI.validate_property(BadRequestErrorBulkAllOfErrorErrors, Symbol("message"), message)
        return new(index, message, )
    end
end # type BadRequestErrorBulkAllOfErrorErrors

const _property_types_BadRequestErrorBulkAllOfErrorErrors = Dict{Symbol,String}(Symbol("index")=>"Float64", Symbol("message")=>"String", )
OpenAPI.property_type(::Type{ BadRequestErrorBulkAllOfErrorErrors }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BadRequestErrorBulkAllOfErrorErrors[name]))}

function check_required(o::BadRequestErrorBulkAllOfErrorErrors)
    true
end

function OpenAPI.validate_property(::Type{ BadRequestErrorBulkAllOfErrorErrors }, name::Symbol, val)
end
