# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DnaSequencesArchivalChange
IDs of all items that were archived or unarchived, grouped by resource type. This includes the IDs of DNA sequences along with any IDs of batches that were archived / unarchived. 

    DnaSequencesArchivalChange(;
        batchIds=nothing,
        dnaSequenceIds=nothing,
    )

    - batchIds::Vector{String}
    - dnaSequenceIds::Vector{String}
"""
Base.@kwdef mutable struct DnaSequencesArchivalChange <: OpenAPI.APIModel
    batchIds::Union{Nothing, Vector{String}} = nothing
    dnaSequenceIds::Union{Nothing, Vector{String}} = nothing

    function DnaSequencesArchivalChange(batchIds, dnaSequenceIds, )
        OpenAPI.validate_property(DnaSequencesArchivalChange, Symbol("batchIds"), batchIds)
        OpenAPI.validate_property(DnaSequencesArchivalChange, Symbol("dnaSequenceIds"), dnaSequenceIds)
        return new(batchIds, dnaSequenceIds, )
    end
end # type DnaSequencesArchivalChange

const _property_types_DnaSequencesArchivalChange = Dict{Symbol,String}(Symbol("batchIds")=>"Vector{String}", Symbol("dnaSequenceIds")=>"Vector{String}", )
OpenAPI.property_type(::Type{ DnaSequencesArchivalChange }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DnaSequencesArchivalChange[name]))}

function check_required(o::DnaSequencesArchivalChange)
    true
end

function OpenAPI.validate_property(::Type{ DnaSequencesArchivalChange }, name::Symbol, val)
end
