# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DnaTemplateAlignmentFile

    DnaTemplateAlignmentFile(;
        data=nothing,
        name=nothing,
    )

    - data::Vector{UInt8}
    - name::String
"""
Base.@kwdef mutable struct DnaTemplateAlignmentFile <: OpenAPI.APIModel
    data::Union{Nothing, Vector{UInt8}} = nothing
    name::Union{Nothing, String} = nothing

    function DnaTemplateAlignmentFile(data, name, )
        OpenAPI.validate_property(DnaTemplateAlignmentFile, Symbol("data"), data)
        OpenAPI.validate_property(DnaTemplateAlignmentFile, Symbol("name"), name)
        return new(data, name, )
    end
end # type DnaTemplateAlignmentFile

const _property_types_DnaTemplateAlignmentFile = Dict{Symbol,String}(Symbol("data")=>"Vector{UInt8}", Symbol("name")=>"String", )
OpenAPI.property_type(::Type{ DnaTemplateAlignmentFile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DnaTemplateAlignmentFile[name]))}

function check_required(o::DnaTemplateAlignmentFile)
    true
end

function OpenAPI.validate_property(::Type{ DnaTemplateAlignmentFile }, name::Symbol, val)
    if name === Symbol("data")
        OpenAPI.validate_param(name, "DnaTemplateAlignmentFile", :format, val, "byte")
    end
end
