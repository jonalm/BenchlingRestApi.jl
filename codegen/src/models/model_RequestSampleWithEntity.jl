# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RequestSampleWithEntity

    RequestSampleWithEntity(;
        containerId=nothing,
        entityId=nothing,
    )

    - containerId::String
    - entityId::String
"""
Base.@kwdef mutable struct RequestSampleWithEntity <: OpenAPI.APIModel
    containerId::Union{Nothing, String} = nothing
    entityId::Union{Nothing, String} = nothing

    function RequestSampleWithEntity(containerId, entityId, )
        OpenAPI.validate_property(RequestSampleWithEntity, Symbol("containerId"), containerId)
        OpenAPI.validate_property(RequestSampleWithEntity, Symbol("entityId"), entityId)
        return new(containerId, entityId, )
    end
end # type RequestSampleWithEntity

const _property_types_RequestSampleWithEntity = Dict{Symbol,String}(Symbol("containerId")=>"String", Symbol("entityId")=>"String", )
OpenAPI.property_type(::Type{ RequestSampleWithEntity }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RequestSampleWithEntity[name]))}

function check_required(o::RequestSampleWithEntity)
    o.entityId === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ RequestSampleWithEntity }, name::Symbol, val)
end
