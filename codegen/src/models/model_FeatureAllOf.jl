# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Feature_allOf

    FeatureAllOf(;
        id=nothing,
        matchType=nothing,
    )

    - id::String : The id of the feature
    - matchType::String : The match type of the feature. Used to determine how auto-annotate matches are made.
"""
Base.@kwdef mutable struct FeatureAllOf <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    matchType::Union{Nothing, String} = nothing

    function FeatureAllOf(id, matchType, )
        OpenAPI.validate_property(FeatureAllOf, Symbol("id"), id)
        OpenAPI.validate_property(FeatureAllOf, Symbol("matchType"), matchType)
        return new(id, matchType, )
    end
end # type FeatureAllOf

const _property_types_FeatureAllOf = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("matchType")=>"String", )
OpenAPI.property_type(::Type{ FeatureAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_FeatureAllOf[name]))}

function check_required(o::FeatureAllOf)
    true
end

function OpenAPI.validate_property(::Type{ FeatureAllOf }, name::Symbol, val)
    if name === Symbol("matchType")
        OpenAPI.validate_param(name, "FeatureAllOf", :enum, val, ["nucleotide", "protein"])
    end
end
