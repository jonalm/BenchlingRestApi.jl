# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""User_allOf

    UserAllOf(;
        email=nothing,
        isSuspended=nothing,
        passwordLastChangedAt=nothing,
    )

    - email::String
    - isSuspended::Bool
    - passwordLastChangedAt::String
"""
Base.@kwdef mutable struct UserAllOf <: OpenAPI.APIModel
    email::Union{Nothing, String} = nothing
    isSuspended::Union{Nothing, Bool} = nothing
    passwordLastChangedAt::Union{Nothing, String} = nothing

    function UserAllOf(email, isSuspended, passwordLastChangedAt, )
        OpenAPI.validate_property(UserAllOf, Symbol("email"), email)
        OpenAPI.validate_property(UserAllOf, Symbol("isSuspended"), isSuspended)
        OpenAPI.validate_property(UserAllOf, Symbol("passwordLastChangedAt"), passwordLastChangedAt)
        return new(email, isSuspended, passwordLastChangedAt, )
    end
end # type UserAllOf

const _property_types_UserAllOf = Dict{Symbol,String}(Symbol("email")=>"String", Symbol("isSuspended")=>"Bool", Symbol("passwordLastChangedAt")=>"String", )
OpenAPI.property_type(::Type{ UserAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UserAllOf[name]))}

function check_required(o::UserAllOf)
    true
end

function OpenAPI.validate_property(::Type{ UserAllOf }, name::Symbol, val)
end
